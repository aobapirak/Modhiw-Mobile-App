{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _CountryTheme = require(\"./CountryTheme\");\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    height: 48,\n    width: '15%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imageStyle: {\n    height: 25,\n    width: 25,\n    resizeMode: 'contain'\n  }\n});\nvar CloseButtonAndroid = function CloseButtonAndroid(props) {\n  var closeImage = require('./assets/images/close.android.png');\n  if (props.image) {\n    closeImage = props.image;\n  }\n  var _useTheme = (0, _CountryTheme.useTheme)(),\n    onBackgroundTextColor = _useTheme.onBackgroundTextColor;\n  return _react.default.createElement(_reactNative.View, {\n    style: [styles.container, props.style]\n  }, _react.default.createElement(_reactNative.TouchableNativeFeedback, {\n    background: _reactNative.Platform.Version < 21 ? _reactNative.TouchableNativeFeedback.SelectableBackground() : _reactNative.TouchableNativeFeedback.SelectableBackgroundBorderless(),\n    onPress: props.onPress\n  }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Image, {\n    source: closeImage,\n    style: [styles.imageStyle, props.imageStyle, {\n      tintColor: onBackgroundTextColor\n    }]\n  }))));\n};\nvar CloseButtonIOS = function CloseButtonIOS(props) {\n  var closeImage = require('./assets/images/close.ios.png');\n  if (props.image) {\n    closeImage = props.image;\n  }\n  var _useTheme2 = (0, _CountryTheme.useTheme)(),\n    onBackgroundTextColor = _useTheme2.onBackgroundTextColor;\n  return _react.default.createElement(_reactNative.View, {\n    style: [styles.container, props.style]\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: props.onPress\n  }, _react.default.createElement(_reactNative.Image, {\n    source: closeImage,\n    style: [styles.imageStyle, props.imageStyle, {\n      tintColor: onBackgroundTextColor\n    }]\n  })));\n};\nvar propTypes = {\n  onPress: _propTypes.default.func,\n  image: _propTypes.default.any\n};\nCloseButtonIOS.prototype = propTypes;\nCloseButtonAndroid.prototype = propTypes;\nvar _default = _reactNative.Platform.select({\n  ios: CloseButtonIOS,\n  android: CloseButtonAndroid,\n  web: CloseButtonIOS\n});\nexports.default = _default;","map":{"version":3,"mappings":";;;;;AAAA;AACA;AAYA;AACA;AAEA,IAAMA,MAAM,GAAGC,uBAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;GACjB;EACDC,UAAU,EAAE;IACVJ,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTI,UAAU,EAAE;;CAEf,CAAC;AASF,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIC,KAAuB,EAAI;EACrD,IAAIC,UAAU,GAAGC,OAAO,CAAC,mCAAmC,CAAC;EAE7D,IAAIF,KAAK,CAACG,KAAK,EAAE;IACfF,UAAU,GAAGD,KAAK,CAACG,KAAK;;EAE1B,gBAAkC,0BAAQ,GAAE;IAApCC,qBAAqB,aAArBA,qBAAqB;EAC7B,OACEC,6BAACC,iBAAI;IAACC,KAAK,EAAE,CAAClB,MAAM,CAACG,SAAS,EAAEQ,KAAK,CAACO,KAAK;EAAC,GAC1CF,6BAACG,oCAAuB;IACtBC,UAAU,EACRC,qBAAQ,CAACC,OAAO,GAAG,EAAE,GACjBH,oCAAuB,CAACI,oBAAoB,EAAE,GAC9CJ,oCAAuB,CAACK,8BAA8B,EAAE;IAE9DC,OAAO,EAAEd,KAAK,CAACc;EAAO,GAEtBT,6BAACC,iBAAI,QACHD,6BAACU,kBAAK;IACJC,MAAM,EAAEf,UAAU;IAClBM,KAAK,EAAE,CACLlB,MAAM,CAACQ,UAAU,EACjBG,KAAK,CAACH,UAAU,EAChB;MAAEoB,SAAS,EAAEb;IAAqB,CAAE;EACrC,EACD,CACG,CACiB,CACrB;AAEX,CAAC;AAED,IAAMc,cAAc,GAAG,SAAjBA,cAAc,CAAIlB,KAAuB,EAAI;EACjD,IAAIC,UAAU,GAAGC,OAAO,CAAC,+BAA+B,CAAC;EAEzD,IAAIF,KAAK,CAACG,KAAK,EAAE;IACfF,UAAU,GAAGD,KAAK,CAACG,KAAK;;EAE1B,iBAAkC,0BAAQ,GAAE;IAApCC,qBAAqB,cAArBA,qBAAqB;EAC7B,OACEC,6BAACC,iBAAI;IAACC,KAAK,EAAE,CAAClB,MAAM,CAACG,SAAS,EAAEQ,KAAK,CAACO,KAAK;EAAC,GAC1CF,6BAACc,6BAAgB;IAACL,OAAO,EAAEd,KAAK,CAACc;EAAO,GACtCT,6BAACU,kBAAK;IACJC,MAAM,EAAEf,UAAU;IAClBM,KAAK,EAAE,CACLlB,MAAM,CAACQ,UAAU,EACjBG,KAAK,CAACH,UAAU,EAChB;MAAEoB,SAAS,EAAEb;IAAqB,CAAE;EACrC,EACD,CACe,CACd;AAEX,CAAC;AAED,IAAMgB,SAAS,GAAG;EAChBN,OAAO,EAAEO,kBAAS,CAACC,IAAI;EACvBnB,KAAK,EAAEkB,kBAAS,CAACE;CAClB;AACDL,cAAc,CAACM,SAAS,GAAGJ,SAAS;AACpCrB,kBAAkB,CAACyB,SAAS,GAAGJ,SAAS;AAAA,eAEzBV,qBAAQ,CAACe,MAAM,CAAC;EAC7BC,GAAG,EAAER,cAAc;EACnBS,OAAO,EAAE5B,kBAAkB;EAC3B6B,GAAG,EAAEV;CACN,CAAC;AAAA","names":["styles","StyleSheet","create","container","height","width","alignItems","justifyContent","imageStyle","resizeMode","CloseButtonAndroid","props","closeImage","require","image","onBackgroundTextColor","React","View","style","TouchableNativeFeedback","background","Platform","Version","SelectableBackground","SelectableBackgroundBorderless","onPress","Image","source","tintColor","CloseButtonIOS","TouchableOpacity","propTypes","PropTypes","func","any","prototype","select","ios","android","web"],"sourceRoot":"","sources":["../src/CloseButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}