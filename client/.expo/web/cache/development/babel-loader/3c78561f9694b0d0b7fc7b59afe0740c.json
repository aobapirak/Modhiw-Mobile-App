{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.attachRecoveredProps = void 0;\nvar attachRecoveredProps = function attachRecoveredProps(props) {\n  try {\n    var _require = require('expo-error-recovery'),\n      recoveredProps = _require.recoveredProps;\n    return Object.assign({}, props, {\n      exp: Object.assign({}, props.exp, {\n        errorRecovery: recoveredProps\n      })\n    });\n  } catch (_unused) {}\n  return props;\n};\nexports.attachRecoveredProps = attachRecoveredProps;","map":{"version":3,"mappings":";;;;AAEO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAoB,CAA4BC,KAAQ,EAAO;EAC1E,IAAI;IAEF,eAA2BC,OAAO,CAAC,qBAAqB,CAAC;MAAjDC,cAAc,YAAdA,cAAc;IACtB,yBACKF,KAAK;MACRG,GAAG,oBAAOH,KAAK,CAACG,GAAG;QAAEC,aAAa,EAAEF;MAAc;IAAE;GAEvD,CAAC,gBAAM;EAER,OAAOF,KAAK;AACd,CAAC;AAAC","names":["attachRecoveredProps","props","require","recoveredProps","exp","errorRecovery"],"sourceRoot":"","sources":["../../src/launch/RecoveryProps.ts"],"sourcesContent":["import { InitialProps } from './withExpoRoot.types';\n\nexport const attachRecoveredProps = <P extends InitialProps>(props: P): P => {\n  try {\n    // Optionally import expo-error-recovery\n    const { recoveredProps } = require('expo-error-recovery');\n    return {\n      ...props,\n      exp: { ...props.exp, errorRecovery: recoveredProps },\n    };\n  } catch {}\n\n  return props;\n};\n"]},"metadata":{},"sourceType":"script"}