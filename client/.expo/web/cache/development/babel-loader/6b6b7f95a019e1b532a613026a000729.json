{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _AnimatedText = _interopRequireDefault(require(\"../../Typography/AnimatedText\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar LabelBackground = function LabelBackground(_ref) {\n  var parentState = _ref.parentState,\n    _ref$labelProps = _ref.labelProps,\n    placeholderStyle = _ref$labelProps.placeholderStyle,\n    baseLabelTranslateX = _ref$labelProps.baseLabelTranslateX,\n    topPosition = _ref$labelProps.topPosition,\n    hasActiveOutline = _ref$labelProps.hasActiveOutline,\n    label = _ref$labelProps.label,\n    backgroundColor = _ref$labelProps.backgroundColor,\n    roundness = _ref$labelProps.roundness,\n    labelStyle = _ref.labelStyle,\n    maxFontSizeMultiplier = _ref.maxFontSizeMultiplier;\n  var hasFocus = hasActiveOutline || parentState.value;\n  var opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0]\n  });\n  var labelTranslationX = {\n    transform: [{\n      translateX: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [-baseLabelTranslateX, 0]\n      })\n    }]\n  };\n  return label ? [React.createElement(_reactNative.Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [_reactNative.StyleSheet.absoluteFill, styles.view, {\n      backgroundColor: backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      opacity: opacity,\n      bottom: Math.max(roundness, 2)\n    }, labelTranslationX]\n  }), React.createElement(_AnimatedText.default, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, {\n      top: topPosition + 1,\n      backgroundColor: backgroundColor,\n      opacity: opacity,\n      transform: [].concat((0, _toConsumableArray2.default)(labelStyle.transform), [{\n        scaleY: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.2, 1]\n        })\n      }]),\n      maxWidth: parentState.labelLayout.width - 2 * placeholderStyle.paddingHorizontal\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, label)] : null;\n};\nvar _default = LabelBackground;\nexports.default = _default;\nvar styles = _reactNative.StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  }\n});","map":{"version":3,"mappings":"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","names":["LabelBackground","_ref","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","roundness","labelStyle","maxFontSizeMultiplier","hasFocus","value","opacity","labeled","interpolate","inputRange","outputRange","labelTranslationX","transform","translateX","React","Animated","View","key","pointerEvents","style","StyleSheet","absoluteFill","styles","view","maxHeight","Math","max","bottom","AnimatedText","outlinedLabel","top","scaleY","maxWidth","labelLayout","width","paddingHorizontal","numberOfLines","create","position","left","color"],"sources":["LabelBackground.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n    roundness,\n  },\n  labelStyle,\n  maxFontSizeMultiplier,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n\n  const labelTranslationX = {\n    transform: [\n      {\n        translateX: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-baseLabelTranslateX, 0],\n        }),\n      },\n    ],\n  };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              maxHeight: Math.max(roundness / 3, 2),\n              opacity,\n              bottom: Math.max(roundness, 2),\n            },\n            labelTranslationX,\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            {\n              top: topPosition + 1,\n              backgroundColor,\n              opacity,\n              transform: [\n                ...labelStyle.transform,\n                {\n                  scaleY: parentState.labeled.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.2, 1],\n                  }),\n                },\n              ],\n              maxWidth:\n                parentState.labelLayout.width -\n                2 * placeholderStyle.paddingHorizontal,\n            },\n          ]}\n          numberOfLines={1}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}