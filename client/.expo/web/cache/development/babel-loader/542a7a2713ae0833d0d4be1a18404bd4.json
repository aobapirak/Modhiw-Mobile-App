{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = usePreventRemove;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _nonSecure = require(\"nanoid/non-secure\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useLatestCallback = _interopRequireDefault(require(\"use-latest-callback\"));\nvar _useNavigation = _interopRequireDefault(require(\"./useNavigation\"));\nvar _usePreventRemoveContext = _interopRequireDefault(require(\"./usePreventRemoveContext\"));\nvar _useRoute2 = _interopRequireDefault(require(\"./useRoute\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction usePreventRemove(preventRemove, callback) {\n  var _React$useState = React.useState(function () {\n      return (0, _nonSecure.nanoid)();\n    }),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n    id = _React$useState2[0];\n  var navigation = (0, _useNavigation.default)();\n  var _useRoute = (0, _useRoute2.default)(),\n    routeKey = _useRoute.key;\n  var _usePreventRemoveCont = (0, _usePreventRemoveContext.default)(),\n    setPreventRemove = _usePreventRemoveCont.setPreventRemove;\n  React.useEffect(function () {\n    setPreventRemove(id, routeKey, preventRemove);\n    return function () {\n      setPreventRemove(id, routeKey, false);\n    };\n  }, [setPreventRemove, id, routeKey, preventRemove]);\n  var beforeRemoveListener = (0, _useLatestCallback.default)(function (e) {\n    if (!preventRemove) {\n      return;\n    }\n    e.preventDefault();\n    callback({\n      data: e.data\n    });\n  });\n  React.useEffect(function () {\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('beforeRemove', beforeRemoveListener);\n  }, [navigation, beforeRemoveListener]);\n}","map":{"version":3,"mappings":";;;;;;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;;AAQe,SAASA,gBAAT,CACbC,aADa,EAEbC,QAFa,EAGb;EACA,sBAAaC,KAAK,CAACC,QAAN,CAAe;MAAA,OAAMC,qBAAM,GAA3B;IAAA,EAAb;IAAA;IAAOC,EAAD;EAEN,IAAMC,UAAU,GAAGC,0BAAa,GAAhC;EACA,gBAA0BC,sBAAQ,GAAlC;IAAaC,qBAALC,GAAG;EAEX,4BAA6BC,oCAAuB,GAApD;IAAQC;EAERV,KAAK,CAACW,SAAN,CAAgB,YAAM;IACpBD,gBAAgB,CAACP,EAAD,EAAKI,QAAL,EAAeT,aAAf,CAAhB;IACA,OAAO,YAAM;MACXY,gBAAgB,CAACP,EAAD,EAAKI,QAAL,EAAe,KAAf,CAAhB;IACD,CAFD;EAGD,CALD,EAKG,CAACG,gBAAD,EAAmBP,EAAnB,EAAuBI,QAAvB,EAAiCT,aAAjC,CALH;EAOA,IAAMc,oBAAoB,GAAGC,8BAAiB,EAE3CC,WAAD,EAAO;IACP,IAAI,CAAChB,aAAL,EAAoB;MAClB;IACD;IAEDgB,CAAC,CAACC,cAAF;IAEAhB,QAAQ,CAAC;MAAEiB,IAAI,EAAEF,CAAC,CAACE;IAAV,CAAD,CAAR;EACD,CAV6C,CAA9C;EAYAhB,KAAK,CAACW,SAAN,CACE;IAAA,OAAMP,UAAN,aAAMA,UAAN,uBAAMA,UAAU,CAAEa,WAAZ,CAAwB,cAAxB,EAAwCL,oBAAxC,CADR;EAAA,GAEE,CAACR,UAAD,EAAaQ,oBAAb,CAFF;AAID","names":["usePreventRemove","preventRemove","callback","React","useState","nanoid","id","navigation","useNavigation","useRoute","routeKey","key","usePreventRemoveContext","setPreventRemove","useEffect","beforeRemoveListener","useLatestCallback","e","preventDefault","data","addListener"],"sources":["usePreventRemove.tsx"],"sourcesContent":["import type { NavigationAction } from '@react-navigation/routers';\nimport { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\n\nimport type { EventListenerCallback, EventMapCore } from './types';\nimport useNavigation from './useNavigation';\nimport usePreventRemoveContext from './usePreventRemoveContext';\nimport useRoute from './useRoute';\n\n/**\n * Hook to prevent screen from being removed. Can be used to prevent users from leaving the screen.\n *\n * @param preventRemove Boolean indicating whether to prevent screen from being removed.\n * @param callback Function which is executed when screen was prevented from being removed.\n */\nexport default function usePreventRemove(\n  preventRemove: boolean,\n  callback: (options: { data: { action: NavigationAction } }) => void\n) {\n  const [id] = React.useState(() => nanoid());\n\n  const navigation = useNavigation();\n  const { key: routeKey } = useRoute();\n\n  const { setPreventRemove } = usePreventRemoveContext();\n\n  React.useEffect(() => {\n    setPreventRemove(id, routeKey, preventRemove);\n    return () => {\n      setPreventRemove(id, routeKey, false);\n    };\n  }, [setPreventRemove, id, routeKey, preventRemove]);\n\n  const beforeRemoveListener = useLatestCallback<\n    EventListenerCallback<EventMapCore<any>, 'beforeRemove'>\n  >((e) => {\n    if (!preventRemove) {\n      return;\n    }\n\n    e.preventDefault();\n\n    callback({ data: e.data });\n  });\n\n  React.useEffect(\n    () => navigation?.addListener('beforeRemove', beforeRemoveListener),\n    [navigation, beforeRemoveListener]\n  );\n}\n"]},"metadata":{},"sourceType":"script"}