{"ast":null,"code":"\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\nvar startNativeAnimationNextId = 1;\nvar Animation = function () {\n  function Animation() {\n    (0, _classCallCheck2.default)(this, Animation);\n  }\n  (0, _createClass2.default)(Animation, [{\n    key: \"start\",\n    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.__nativeId) {\n        _NativeAnimatedHelper.default.API.stopAnimation(this.__nativeId);\n      }\n    }\n  }, {\n    key: \"__getNativeAnimationConfig\",\n    value: function __getNativeAnimationConfig() {\n      throw new Error('This animation type cannot be offloaded to native');\n    }\n  }, {\n    key: \"__debouncedOnEnd\",\n    value:\n\n    function __debouncedOnEnd(result) {\n      var onEnd = this.__onEnd;\n      this.__onEnd = null;\n      onEnd && onEnd(result);\n    }\n  }, {\n    key: \"__startNativeAnimation\",\n    value: function __startNativeAnimation(animatedValue) {\n      var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n      startNativeAnimationNextId += 1;\n      _NativeAnimatedHelper.default.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n      try {\n        animatedValue.__makeNative();\n        this.__nativeId = _NativeAnimatedHelper.default.generateNewAnimationId();\n        _NativeAnimatedHelper.default.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n      } catch (e) {\n        throw e;\n      } finally {\n        _NativeAnimatedHelper.default.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n      }\n    }\n  }]);\n  return Animation;\n}();\nvar _default = Animation;\nexports.default = _default;","map":{"version":3,"names":["startNativeAnimationNextId","Animation","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__nativeId","NativeAnimatedHelper","API","stopAnimation","Error","result","__onEnd","startNativeAnimationWaitId","setWaitingForIdentifier","__makeNative","generateNewAnimationId","startAnimatingNode","__getNativeTag","__getNativeAnimationConfig","__debouncedOnEnd","bind","e","unsetWaitingForIdentifier"],"sources":["C:/Users/prariya/Desktop/Modhiw/client/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/Animation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar startNativeAnimationNextId = 1; // Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\n\nclass Animation {\n  start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}\n\n  stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  }\n\n  __getNativeAnimationConfig() {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  } // Helper function for subclasses to make sure onEnd is only called once.\n\n\n  __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  }\n\n  __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  }\n\n}\n\nexport default Animation;"],"mappings":";AASA,YAAY;;AAAC;AAAA;EAAA;AAAA;AAAA;AAAA;AAAA;AAEb;AACA,IAAIA,0BAA0B,GAAG,CAAC;AAAC,IAI7BC,SAAS;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACb,eAAMC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,iBAAiB,EAAEC,aAAa,EAAE,CAAC;EAAC;IAAA;IAAA,OAEtE,gBAAO;MACL,IAAI,IAAI,CAACC,UAAU,EAAE;QACnBC,6BAAoB,CAACC,GAAG,CAACC,aAAa,CAAC,IAAI,CAACH,UAAU,CAAC;MACzD;IACF;EAAC;IAAA;IAAA,OAED,sCAA6B;MAG3B,MAAM,IAAII,KAAK,CAAC,mDAAmD,CAAC;IACtE;EAAC;IAAA;IAAA;;IAGD,0BAAiBC,MAAM,EAAE;MACvB,IAAIR,KAAK,GAAG,IAAI,CAACS,OAAO;MACxB,IAAI,CAACA,OAAO,GAAG,IAAI;MACnBT,KAAK,IAAIA,KAAK,CAACQ,MAAM,CAAC;IACxB;EAAC;IAAA;IAAA,OAED,gCAAuBN,aAAa,EAAE;MACpC,IAAIQ,0BAA0B,GAAGd,0BAA0B,GAAG,iBAAiB;MAC/EA,0BAA0B,IAAI,CAAC;MAC/BQ,6BAAoB,CAACC,GAAG,CAACM,uBAAuB,CAACD,0BAA0B,CAAC;MAE5E,IAAI;QACFR,aAAa,CAACU,YAAY,EAAE;QAE5B,IAAI,CAACT,UAAU,GAAGC,6BAAoB,CAACS,sBAAsB,EAAE;QAC/DT,6BAAoB,CAACC,GAAG,CAACS,kBAAkB,CAAC,IAAI,CAACX,UAAU,EAAED,aAAa,CAACa,cAAc,EAAE,EAAE,IAAI,CAACC,0BAA0B,EAAE,EAAE,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnK,CAAC,CAAC,OAAOC,CAAC,EAAE;QACV,MAAMA,CAAC;MACT,CAAC,SAAS;QACRf,6BAAoB,CAACC,GAAG,CAACe,yBAAyB,CAACV,0BAA0B,CAAC;MAChF;IACF;EAAC;EAAA;AAAA;AAAA,eAIYb,SAAS;AAAA"},"metadata":{},"sourceType":"script"}