{"ast":null,"code":"\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _createForOfIteratorHelperLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelperLoose\"));\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar ViewabilityHelper = function () {\n  function ViewabilityHelper(config) {\n    (0, _classCallCheck2.default)(this, ViewabilityHelper);\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n  (0, _createClass2.default)(ViewabilityHelper, [{\n    key: \"dispose\",\n    value:\n\n    function dispose() {\n      this._timers.forEach(clearTimeout);\n    }\n  }, {\n    key: \"computeViewableItems\",\n    value:\n\n    function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n      var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n      var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n      var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n      (0, _invariant.default)(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n      var viewableIndices = [];\n      if (itemCount === 0) {\n        return viewableIndices;\n      }\n      var firstVisible = -1;\n      var _ref = renderRange || {\n          first: 0,\n          last: itemCount - 1\n        },\n        first = _ref.first,\n        last = _ref.last;\n      if (last >= itemCount) {\n        console.warn('Invalid render range computing viewability ' + JSON.stringify({\n          renderRange: renderRange,\n          itemCount: itemCount\n        }));\n        return [];\n      }\n      for (var idx = first; idx <= last; idx++) {\n        var metrics = getFrameMetrics(idx);\n        if (!metrics) {\n          continue;\n        }\n        var top = metrics.offset - scrollOffset;\n        var bottom = top + metrics.length;\n        if (top < viewportHeight && bottom > 0) {\n          firstVisible = idx;\n          if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n            viewableIndices.push(idx);\n          }\n        } else if (firstVisible >= 0) {\n          break;\n        }\n      }\n      return viewableIndices;\n    }\n  }, {\n    key: \"onUpdate\",\n    value:\n\n    function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n      var _this = this;\n      if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n        return;\n      }\n      var viewableIndices = [];\n      if (itemCount) {\n        viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n      }\n      if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n        return v === viewableIndices[ii];\n      })) {\n        return;\n      }\n      this._viewableIndices = viewableIndices;\n      if (this._config.minimumViewTime) {\n        var handle = setTimeout(function () {\n          _this._timers.delete(handle);\n          _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n        }, this._config.minimumViewTime);\n        this._timers.add(handle);\n      } else {\n        this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }\n    }\n  }, {\n    key: \"resetViewableIndices\",\n    value:\n\n    function resetViewableIndices() {\n      this._viewableIndices = [];\n    }\n  }, {\n    key: \"recordInteraction\",\n    value:\n\n    function recordInteraction() {\n      this._hasInteracted = true;\n    }\n  }, {\n    key: \"_onUpdateSync\",\n    value: function _onUpdateSync(\n    viewableIndicesToCheck,\n    onViewableItemsChanged,\n    createViewToken) {\n      var _this2 = this;\n      viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n        return _this2._viewableIndices.includes(ii);\n      });\n      var prevItems = this._viewableItems;\n      var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n        var viewable = createViewToken(ii, true);\n        return [viewable.key, viewable];\n      }));\n      var changed = [];\n      for (var _iterator = (0, _createForOfIteratorHelperLoose2.default)(nextItems), _step; !(_step = _iterator()).done;) {\n        var _step$value = _step.value,\n          key = _step$value[0],\n          viewable = _step$value[1];\n        if (!prevItems.has(key)) {\n          changed.push(viewable);\n        }\n      }\n      for (var _iterator2 = (0, _createForOfIteratorHelperLoose2.default)(prevItems), _step2; !(_step2 = _iterator2()).done;) {\n        var _step2$value = _step2.value,\n          _key = _step2$value[0],\n          _viewable = _step2$value[1];\n        if (!nextItems.has(_key)) {\n          changed.push((0, _objectSpread2.default)((0, _objectSpread2.default)({}, _viewable), {}, {\n            isViewable: false\n          }));\n        }\n      }\n      if (changed.length > 0) {\n        this._viewableItems = nextItems;\n        onViewableItemsChanged({\n          viewableItems: Array.from(nextItems.values()),\n          changed: changed,\n          viewabilityConfig: this._config\n        });\n      }\n    }\n  }]);\n  return ViewabilityHelper;\n}();\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\nvar _default = ViewabilityHelper;\nexports.default = _default;","map":{"version":3,"names":["ViewabilityHelper","config","viewAreaCoveragePercentThreshold","_hasInteracted","_timers","Set","_viewableIndices","_viewableItems","Map","_config","forEach","clearTimeout","itemCount","scrollOffset","viewportHeight","getFrameMetrics","renderRange","_this$_config","itemVisiblePercentThreshold","viewAreaMode","viewablePercentThreshold","invariant","viewableIndices","firstVisible","_ref","first","last","console","warn","JSON","stringify","idx","metrics","top","offset","bottom","length","_isViewable","push","createViewToken","onViewableItemsChanged","waitForInteraction","computeViewableItems","every","v","ii","minimumViewTime","handle","setTimeout","delete","_onUpdateSync","add","viewableIndicesToCheck","filter","includes","prevItems","nextItems","map","viewable","key","changed","_iterator","_createForOfIteratorHelperLoose","_step","done","_step$value","value","has","_iterator2","_step2","_step2$value","_key","_viewable","_objectSpread","isViewable","viewableItems","Array","from","values","viewabilityConfig","itemLength","_isEntirelyVisible","pixels","_getPixelsVisible","percent","visibleHeight","Math","min","max"],"sources":["C:/Users/prariya/Desktop/Modhiw/client/node_modules/react-native-web/dist/vendor/react-native/ViewabilityHelper/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport invariant from 'fbjs/lib/invariant';\n\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\nclass ViewabilityHelper {\n  constructor(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n\n\n  dispose() {\n    this._timers.forEach(clearTimeout);\n  }\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n\n\n  computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange // Optional optimization to reduce the scan size\n  ) {\n    var _this$_config = this._config,\n        itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n        viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n\n    var firstVisible = -1;\n\n    var _ref = renderRange || {\n      first: 0,\n      last: itemCount - 1\n    },\n        first = _ref.first,\n        last = _ref.last;\n\n    if (last >= itemCount) {\n      console.warn('Invalid render range computing viewability ' + JSON.stringify({\n        renderRange,\n        itemCount\n      }));\n      return [];\n    }\n\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx);\n\n      if (!metrics) {\n        continue;\n      }\n\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n\n    return viewableIndices;\n  }\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n\n\n  onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange // Optional optimization to reduce the scan size\n  ) {\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n      return;\n    }\n\n    var viewableIndices = [];\n\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every((v, ii) => v === viewableIndices[ii])) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n\n    this._viewableIndices = viewableIndices;\n\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(() => {\n        this._timers.delete(handle);\n\n        this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  }\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n\n\n  resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n\n\n  recordInteraction() {\n    this._hasInteracted = true;\n  }\n\n  _onUpdateSync( // $FlowFixMe\n  viewableIndicesToCheck, // $FlowFixMe\n  onViewableItemsChanged, // $FlowFixMe\n  createViewToken) {\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(ii => this._viewableIndices.includes(ii));\n    var prevItems = this._viewableItems;\n    var nextItems = new Map(viewableIndicesToCheck.map(ii => {\n      var viewable = createViewToken(ii, true);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(nextItems), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          key = _step$value[0],\n          viewable = _step$value[1];\n\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(prevItems), _step2; !(_step2 = _iterator2()).done;) {\n      var _step2$value = _step2.value,\n          _key = _step2$value[0],\n          _viewable = _step2$value[1];\n\n      if (!nextItems.has(_key)) {\n        changed.push(_objectSpread(_objectSpread({}, _viewable), {}, {\n          isViewable: false\n        }));\n      }\n    }\n\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed,\n        viewabilityConfig: this._config\n      });\n    }\n  }\n\n}\n\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\n\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\n\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\n\nexport default ViewabilityHelper;"],"mappings":"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"},"metadata":{},"sourceType":"script"}