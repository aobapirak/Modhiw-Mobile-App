{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = shadow;\nvar Colors = _interopRequireWildcard(require(\"./colors\"));\nvar _reactNative = require(\"react-native\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar SHADOW_COLOR = Colors.black;\nvar SHADOW_OPACITY = 0.24;\nfunction shadow() {\n  var elevation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  if (elevation instanceof _reactNative.Animated.Value) {\n    var inputRange = [0, 1, 2, 3, 8, 24];\n    return {\n      shadowColor: SHADOW_COLOR,\n      shadowOffset: {\n        width: new _reactNative.Animated.Value(0),\n        height: elevation.interpolate({\n          inputRange: inputRange,\n          outputRange: [0, 0.5, 0.75, 2, 7, 23]\n        })\n      },\n      shadowOpacity: elevation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, SHADOW_OPACITY],\n        extrapolate: 'clamp'\n      }),\n      shadowRadius: elevation.interpolate({\n        inputRange: inputRange,\n        outputRange: [0, 0.75, 1.5, 3, 8, 24]\n      })\n    };\n  } else {\n    if (elevation === 0) {\n      return {};\n    }\n    var height, radius;\n    switch (elevation) {\n      case 1:\n        height = 0.5;\n        radius = 0.75;\n        break;\n      case 2:\n        height = 0.75;\n        radius = 1.5;\n        break;\n      default:\n        height = elevation - 1;\n        radius = elevation;\n    }\n    return {\n      shadowColor: SHADOW_COLOR,\n      shadowOffset: {\n        width: 0,\n        height: height\n      },\n      shadowOpacity: SHADOW_OPACITY,\n      shadowRadius: radius\n    };\n  }\n}","map":{"version":3,"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAEA,IAAMA,YAAY,GAAGC,MAAM,CAACC,KAA5B;AACA,IAAMC,cAAc,GAAG,IAAvB;AAEe,SAASC,MAAT,GAAwD;EAAA,IAAxCC,SAAwC,uEAAH,CAAG;EACrE,IAAIA,SAAS,YAAYC,qBAAQ,CAACC,KAAlC,EAAyC;IACvC,IAAMC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,CAAnB;IAEA,OAAO;MACLC,WAAW,EAAET,YADR;MAELU,YAAY,EAAE;QACZC,KAAK,EAAE,IAAIL,qBAAQ,CAACC,KAAb,CAAmB,CAAnB,CADK;QAEZK,MAAM,EAAEP,SAAS,CAACQ,WAAV,CAAsB;UAC5BL,UAD4B,EAC5BA,UAD4B;UAE5BM,WAAW,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB;QAFe,CAAtB;MAFI,CAFT;MASLC,aAAa,EAAEV,SAAS,CAACQ,WAAV,CAAsB;QACnCL,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADuB;QAEnCM,WAAW,EAAE,CAAC,CAAD,EAAIX,cAAJ,CAFsB;QAGnCa,WAAW,EAAE;MAHsB,CAAtB,CATV;MAcLC,YAAY,EAAEZ,SAAS,CAACQ,WAAV,CAAsB;QAClCL,UADkC,EAClCA,UADkC;QAElCM,WAAW,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB;MAFqB,CAAtB;IAdT,CAAP;EAmBD,CAtBD,MAsBO;IACL,IAAIT,SAAS,KAAK,CAAlB,EAAqB;MACnB,OAAO,EAAP;IACD;IAED,IAAIO,MAAJ,EAAYM,MAAZ;IACA,QAAQb,SAAR;MACE,KAAK,CAAL;QACEO,MAAM,GAAG,GAAT;QACAM,MAAM,GAAG,IAAT;QACA;MACF,KAAK,CAAL;QACEN,MAAM,GAAG,IAAT;QACAM,MAAM,GAAG,GAAT;QACA;MACF;QACEN,MAAM,GAAGP,SAAS,GAAG,CAArB;QACAa,MAAM,GAAGb,SAAT;IAAA;IAGJ,OAAO;MACLI,WAAW,EAAET,YADR;MAELU,YAAY,EAAE;QACZC,KAAK,EAAE,CADK;QAEZC;MAFY,CAFT;MAMLG,aAAa,EAAEZ,cANV;MAOLc,YAAY,EAAEC;IAPT,CAAP;EASD;AACF","names":["SHADOW_COLOR","Colors","black","SHADOW_OPACITY","shadow","elevation","Animated","Value","inputRange","shadowColor","shadowOffset","width","height","interpolate","outputRange","shadowOpacity","extrapolate","shadowRadius","radius"],"sources":["shadow.tsx"],"sourcesContent":["import * as Colors from './colors';\nimport { Animated } from 'react-native';\n\nconst SHADOW_COLOR = Colors.black;\nconst SHADOW_OPACITY = 0.24;\n\nexport default function shadow(elevation: number | Animated.Value = 0) {\n  if (elevation instanceof Animated.Value) {\n    const inputRange = [0, 1, 2, 3, 8, 24];\n\n    return {\n      shadowColor: SHADOW_COLOR,\n      shadowOffset: {\n        width: new Animated.Value(0),\n        height: elevation.interpolate({\n          inputRange,\n          outputRange: [0, 0.5, 0.75, 2, 7, 23],\n        }),\n      },\n      shadowOpacity: elevation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, SHADOW_OPACITY],\n        extrapolate: 'clamp',\n      }),\n      shadowRadius: elevation.interpolate({\n        inputRange,\n        outputRange: [0, 0.75, 1.5, 3, 8, 24],\n      }),\n    };\n  } else {\n    if (elevation === 0) {\n      return {};\n    }\n\n    let height, radius;\n    switch (elevation) {\n      case 1:\n        height = 0.5;\n        radius = 0.75;\n        break;\n      case 2:\n        height = 0.75;\n        radius = 1.5;\n        break;\n      default:\n        height = elevation - 1;\n        radius = elevation;\n    }\n\n    return {\n      shadowColor: SHADOW_COLOR,\n      shadowOffset: {\n        width: 0,\n        height,\n      },\n      shadowOpacity: SHADOW_OPACITY,\n      shadowRadius: radius,\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"script"}