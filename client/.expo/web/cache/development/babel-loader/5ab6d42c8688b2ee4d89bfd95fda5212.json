{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar PixelRatio = function () {\n  function PixelRatio() {\n    _classCallCheck(this, PixelRatio);\n  }\n\n  PixelRatio.get = function get() {\n    return _Dimensions.default.get('window').scale;\n  };\n\n  PixelRatio.getFontScale = function getFontScale() {\n    return _Dimensions.default.get('window').fontScale || PixelRatio.get();\n  };\n\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  };\n\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n  return PixelRatio;\n}();\nvar _default = PixelRatio;\nexports.default = _default;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","PixelRatio","get","Dimensions","scale","getFontScale","fontScale","getPixelSizeForLayoutSize","layoutSize","Math","round","roundToNearestPixel","ratio"],"sources":["C:/Users/prariya/Desktop/Modhiw/client/node_modules/react-native-phone-number-input/node_modules/react-native-web/dist/exports/PixelRatio/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport Dimensions from '../Dimensions';\n\n/**\n * PixelRatio gives access to the device pixel density.\n */\n\nvar PixelRatio = function () {\n  function PixelRatio() {\n    _classCallCheck(this, PixelRatio);\n  }\n\n  /**\n   * Returns the device pixel density.\n   */\n  PixelRatio.get = function get() {\n    return Dimensions.get('window').scale;\n  };\n\n  /**\n   * No equivalent for Web\n   */\n\n\n  PixelRatio.getFontScale = function getFontScale() {\n    return Dimensions.get('window').fontScale || PixelRatio.get();\n  };\n\n  /**\n   * Converts a layout size (dp) to pixel size (px).\n   * Guaranteed to return an integer number.\n   */\n\n\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  };\n\n  /**\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\n   * an integer number of pixels. For example, on a device with a PixelRatio\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n   * exactly (8.33 * 3) = 25 pixels.\n   */\n\n\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n\n  return PixelRatio;\n}();\n\nexport default PixelRatio;"],"mappings":";;;;;AAYA;AAZA,SAASA,eAAe,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;;AAkBxJ,IAAIC,UAAU,GAAG,YAAY;EAC3B,SAASA,UAAU,GAAG;IACpBJ,eAAe,CAAC,IAAI,EAAEI,UAAU,CAAC;EACnC;;EAKAA,UAAU,CAACC,GAAG,GAAG,SAASA,GAAG,GAAG;IAC9B,OAAOC,mBAAU,CAACD,GAAG,CAAC,QAAQ,CAAC,CAACE,KAAK;EACvC,CAAC;;EAODH,UAAU,CAACI,YAAY,GAAG,SAASA,YAAY,GAAG;IAChD,OAAOF,mBAAU,CAACD,GAAG,CAAC,QAAQ,CAAC,CAACI,SAAS,IAAIL,UAAU,CAACC,GAAG,EAAE;EAC/D,CAAC;;EAQDD,UAAU,CAACM,yBAAyB,GAAG,SAASA,yBAAyB,CAACC,UAAU,EAAE;IACpF,OAAOC,IAAI,CAACC,KAAK,CAACF,UAAU,GAAGP,UAAU,CAACC,GAAG,EAAE,CAAC;EAClD,CAAC;;EAUDD,UAAU,CAACU,mBAAmB,GAAG,SAASA,mBAAmB,CAACH,UAAU,EAAE;IACxE,IAAII,KAAK,GAAGX,UAAU,CAACC,GAAG,EAAE;IAC5B,OAAOO,IAAI,CAACC,KAAK,CAACF,UAAU,GAAGI,KAAK,CAAC,GAAGA,KAAK;EAC/C,CAAC;EAED,OAAOX,UAAU;AACnB,CAAC,EAAE;AAAC,eAEWA,UAAU;AAAA"},"metadata":{},"sourceType":"script"}