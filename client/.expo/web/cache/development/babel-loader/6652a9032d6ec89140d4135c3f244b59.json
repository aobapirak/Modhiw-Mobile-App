{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar DialogContent = function DialogContent(props) {\n  return React.createElement(_reactNative.View, _extends({}, props, {\n    style: [styles.container, props.style]\n  }), props.children);\n};\nDialogContent.displayName = 'Dialog.Content';\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    paddingBottom: 24,\n    paddingHorizontal: 24\n  }\n});\nvar _default = DialogContent;\nexports.default = _default;","map":{"version":3,"mappings":";;;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;AA4CA,IAAMA,aAAa,GAAIC,SAAjBD,aAAa,CAAIC,KAAD;EAAA,OACpBC,oBAACC,iBAAD,eAAUF,KAAV;IAAiBG,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBL,KAAK,CAACG,KAAzB;EAAxB,IACGH,KAAK,CAACM,QADT,CADF;AAAA;AAMAP,aAAa,CAACQ,WAAd,GAA4B,gBAA5B;AAEA,IAAMH,MAAM,GAAGI,uBAAU,CAACC,MAAX,CAAkB;EAC/BJ,SAAS,EAAE;IACTK,aAAa,EAAE,EADN;IAETC,iBAAiB,EAAE;EAFV;AADoB,CAAlB,CAAf;AAAA,eAOeZ,aAAf;AAAA","names":["DialogContent","props","React","View","style","styles","container","children","displayName","StyleSheet","create","paddingBottom","paddingHorizontal"],"sources":["DialogContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogContent`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show content in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-content.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Content>\n *           <Paragraph>This is simple dialog</Paragraph>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogContent = (props: Props) => (\n  <View {...props} style={[styles.container, props.style]}>\n    {props.children}\n  </View>\n);\n\nDialogContent.displayName = 'Dialog.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingBottom: 24,\n    paddingHorizontal: 24,\n  },\n});\n\nexport default DialogContent;\n"]},"metadata":{},"sourceType":"script"}