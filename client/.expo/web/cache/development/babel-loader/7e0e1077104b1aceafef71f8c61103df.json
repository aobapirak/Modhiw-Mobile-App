{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addModalityListener = addModalityListener;\nexports.getActiveModality = getActiveModality;\nexports.getModality = getModality;\nexports.testOnly_resetActiveModality = testOnly_resetActiveModality;\nvar _createEventHandle = _interopRequireDefault(require(\"../createEventHandle\"));\nvar _canUseDom = _interopRequireDefault(require(\"../canUseDom\"));\n\nvar supportsPointerEvent = function supportsPointerEvent() {\n  return !!(typeof window !== 'undefined' && window.PointerEvent != null);\n};\nvar activeModality = 'keyboard';\nvar modality = 'keyboard';\nvar previousModality;\nvar previousActiveModality;\nvar isEmulatingMouseEvents = false;\nvar listeners = new Set();\nvar KEYBOARD = 'keyboard';\nvar MOUSE = 'mouse';\nvar TOUCH = 'touch';\nvar BLUR = 'blur';\nvar CONTEXTMENU = 'contextmenu';\nvar FOCUS = 'focus';\nvar KEYDOWN = 'keydown';\nvar MOUSEDOWN = 'mousedown';\nvar MOUSEMOVE = 'mousemove';\nvar MOUSEUP = 'mouseup';\nvar POINTERDOWN = 'pointerdown';\nvar POINTERMOVE = 'pointermove';\nvar SCROLL = 'scroll';\nvar SELECTIONCHANGE = 'selectionchange';\nvar TOUCHCANCEL = 'touchcancel';\nvar TOUCHMOVE = 'touchmove';\nvar TOUCHSTART = 'touchstart';\nvar VISIBILITYCHANGE = 'visibilitychange';\nvar bubbleOptions = {\n  passive: true\n};\nvar captureOptions = {\n  capture: true,\n  passive: true\n};\n\nvar addBlurListener = (0, _createEventHandle.default)(BLUR, bubbleOptions);\nvar addFocusListener = (0, _createEventHandle.default)(FOCUS, bubbleOptions);\n\nvar addVisibilityChangeListener = (0, _createEventHandle.default)(VISIBILITYCHANGE, captureOptions);\nvar addKeyDownListener = (0, _createEventHandle.default)(KEYDOWN, captureOptions);\nvar addPointerDownListener = (0, _createEventHandle.default)(POINTERDOWN, captureOptions);\nvar addPointerMoveListener = (0, _createEventHandle.default)(POINTERMOVE, captureOptions);\n\nvar addContextMenuListener = (0, _createEventHandle.default)(CONTEXTMENU, captureOptions);\nvar addMouseDownListener = (0, _createEventHandle.default)(MOUSEDOWN, captureOptions);\nvar addMouseMoveListener = (0, _createEventHandle.default)(MOUSEMOVE, captureOptions);\nvar addMouseUpListener = (0, _createEventHandle.default)(MOUSEUP, captureOptions);\nvar addScrollListener = (0, _createEventHandle.default)(SCROLL, captureOptions);\nvar addSelectiomChangeListener = (0, _createEventHandle.default)(SELECTIONCHANGE, captureOptions);\nvar addTouchCancelListener = (0, _createEventHandle.default)(TOUCHCANCEL, captureOptions);\nvar addTouchMoveListener = (0, _createEventHandle.default)(TOUCHMOVE, captureOptions);\nvar addTouchStartListener = (0, _createEventHandle.default)(TOUCHSTART, captureOptions);\nfunction restoreModality() {\n  if (previousModality != null || previousActiveModality != null) {\n    if (previousModality != null) {\n      modality = previousModality;\n      previousModality = null;\n    }\n    if (previousActiveModality != null) {\n      activeModality = previousActiveModality;\n      previousActiveModality = null;\n    }\n    callListeners();\n  }\n}\nfunction onBlurWindow() {\n  previousModality = modality;\n  previousActiveModality = activeModality;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n  callListeners();\n\n  isEmulatingMouseEvents = false;\n}\nfunction onFocusWindow() {\n  restoreModality();\n}\nfunction onKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n  if (modality !== KEYBOARD) {\n    modality = KEYBOARD;\n    activeModality = KEYBOARD;\n    callListeners();\n  }\n}\nfunction onVisibilityChange() {\n  if (document.visibilityState !== 'hidden') {\n    restoreModality();\n  }\n}\nfunction onPointerish(event) {\n  var eventType = event.type;\n  if (supportsPointerEvent()) {\n    if (eventType === POINTERDOWN) {\n      if (activeModality !== event.pointerType) {\n        modality = event.pointerType;\n        activeModality = event.pointerType;\n        callListeners();\n      }\n      return;\n    }\n    if (eventType === POINTERMOVE) {\n      if (modality !== event.pointerType) {\n        modality = event.pointerType;\n        callListeners();\n      }\n      return;\n    }\n  } else {\n    if (!isEmulatingMouseEvents) {\n      if (eventType === MOUSEDOWN) {\n        if (activeModality !== MOUSE) {\n          modality = MOUSE;\n          activeModality = MOUSE;\n          callListeners();\n        }\n      }\n      if (eventType === MOUSEMOVE) {\n        if (modality !== MOUSE) {\n          modality = MOUSE;\n          callListeners();\n        }\n      }\n    }\n\n    if (eventType === TOUCHSTART) {\n      isEmulatingMouseEvents = true;\n      if (event.touches && event.touches.length > 1) {\n        isEmulatingMouseEvents = false;\n      }\n      if (activeModality !== TOUCH) {\n        modality = TOUCH;\n        activeModality = TOUCH;\n        callListeners();\n      }\n      return;\n    }\n\n    if (eventType === CONTEXTMENU || eventType === MOUSEUP || eventType === SELECTIONCHANGE || eventType === SCROLL || eventType === TOUCHCANCEL || eventType === TOUCHMOVE) {\n      isEmulatingMouseEvents = false;\n    }\n  }\n}\nif (_canUseDom.default) {\n  addBlurListener(window, onBlurWindow);\n  addFocusListener(window, onFocusWindow);\n  addKeyDownListener(document, onKeyDown);\n  addPointerDownListener(document, onPointerish);\n  addPointerMoveListener(document, onPointerish);\n  addVisibilityChangeListener(document, onVisibilityChange);\n\n  addContextMenuListener(document, onPointerish);\n  addMouseDownListener(document, onPointerish);\n  addMouseMoveListener(document, onPointerish);\n  addMouseUpListener(document, onPointerish);\n  addTouchCancelListener(document, onPointerish);\n  addTouchMoveListener(document, onPointerish);\n  addTouchStartListener(document, onPointerish);\n  addSelectiomChangeListener(document, onPointerish);\n  addScrollListener(document, onPointerish);\n}\nfunction callListeners() {\n  var value = {\n    activeModality: activeModality,\n    modality: modality\n  };\n  listeners.forEach(function (listener) {\n    listener(value);\n  });\n}\nfunction getActiveModality() {\n  return activeModality;\n}\nfunction getModality() {\n  return modality;\n}\nfunction addModalityListener(listener) {\n  listeners.add(listener);\n  return function () {\n    listeners.delete(listener);\n  };\n}\nfunction testOnly_resetActiveModality() {\n  isEmulatingMouseEvents = false;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n}","map":{"version":3,"names":["supportsPointerEvent","window","PointerEvent","activeModality","modality","previousModality","previousActiveModality","isEmulatingMouseEvents","listeners","Set","KEYBOARD","MOUSE","TOUCH","BLUR","CONTEXTMENU","FOCUS","KEYDOWN","MOUSEDOWN","MOUSEMOVE","MOUSEUP","POINTERDOWN","POINTERMOVE","SCROLL","SELECTIONCHANGE","TOUCHCANCEL","TOUCHMOVE","TOUCHSTART","VISIBILITYCHANGE","bubbleOptions","passive","captureOptions","capture","addBlurListener","createEventHandle","addFocusListener","addVisibilityChangeListener","addKeyDownListener","addPointerDownListener","addPointerMoveListener","addContextMenuListener","addMouseDownListener","addMouseMoveListener","addMouseUpListener","addScrollListener","addSelectiomChangeListener","addTouchCancelListener","addTouchMoveListener","addTouchStartListener","restoreModality","callListeners","onBlurWindow","onFocusWindow","onKeyDown","event","metaKey","altKey","ctrlKey","onVisibilityChange","document","visibilityState","onPointerish","eventType","type","pointerType","touches","length","canUseDOM","value","forEach","listener","getActiveModality","getModality","addModalityListener","add","delete","testOnly_resetActiveModality"],"sources":["C:/Users/prariya/Desktop/Modhiw/client/node_modules/react-native-web/dist/modules/modality/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport createEventHandle from '../createEventHandle';\nimport canUseDOM from '../canUseDom';\n\nvar supportsPointerEvent = () => !!(typeof window !== 'undefined' && window.PointerEvent != null);\n\nvar activeModality = 'keyboard';\nvar modality = 'keyboard';\nvar previousModality;\nvar previousActiveModality;\nvar isEmulatingMouseEvents = false;\nvar listeners = new Set();\nvar KEYBOARD = 'keyboard';\nvar MOUSE = 'mouse';\nvar TOUCH = 'touch';\nvar BLUR = 'blur';\nvar CONTEXTMENU = 'contextmenu';\nvar FOCUS = 'focus';\nvar KEYDOWN = 'keydown';\nvar MOUSEDOWN = 'mousedown';\nvar MOUSEMOVE = 'mousemove';\nvar MOUSEUP = 'mouseup';\nvar POINTERDOWN = 'pointerdown';\nvar POINTERMOVE = 'pointermove';\nvar SCROLL = 'scroll';\nvar SELECTIONCHANGE = 'selectionchange';\nvar TOUCHCANCEL = 'touchcancel';\nvar TOUCHMOVE = 'touchmove';\nvar TOUCHSTART = 'touchstart';\nvar VISIBILITYCHANGE = 'visibilitychange';\nvar bubbleOptions = {\n  passive: true\n};\nvar captureOptions = {\n  capture: true,\n  passive: true\n}; // Window events\n\nvar addBlurListener = createEventHandle(BLUR, bubbleOptions);\nvar addFocusListener = createEventHandle(FOCUS, bubbleOptions); // Must be capture phase because 'stopPropagation' might prevent these\n// events bubbling to the document.\n\nvar addVisibilityChangeListener = createEventHandle(VISIBILITYCHANGE, captureOptions);\nvar addKeyDownListener = createEventHandle(KEYDOWN, captureOptions);\nvar addPointerDownListener = createEventHandle(POINTERDOWN, captureOptions);\nvar addPointerMoveListener = createEventHandle(POINTERMOVE, captureOptions); // Fallback events\n\nvar addContextMenuListener = createEventHandle(CONTEXTMENU, captureOptions);\nvar addMouseDownListener = createEventHandle(MOUSEDOWN, captureOptions);\nvar addMouseMoveListener = createEventHandle(MOUSEMOVE, captureOptions);\nvar addMouseUpListener = createEventHandle(MOUSEUP, captureOptions);\nvar addScrollListener = createEventHandle(SCROLL, captureOptions);\nvar addSelectiomChangeListener = createEventHandle(SELECTIONCHANGE, captureOptions);\nvar addTouchCancelListener = createEventHandle(TOUCHCANCEL, captureOptions);\nvar addTouchMoveListener = createEventHandle(TOUCHMOVE, captureOptions);\nvar addTouchStartListener = createEventHandle(TOUCHSTART, captureOptions);\n\nfunction restoreModality() {\n  if (previousModality != null || previousActiveModality != null) {\n    if (previousModality != null) {\n      modality = previousModality;\n      previousModality = null;\n    }\n\n    if (previousActiveModality != null) {\n      activeModality = previousActiveModality;\n      previousActiveModality = null;\n    }\n\n    callListeners();\n  }\n}\n\nfunction onBlurWindow() {\n  previousModality = modality;\n  previousActiveModality = activeModality;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n  callListeners(); // for fallback events\n\n  isEmulatingMouseEvents = false;\n}\n\nfunction onFocusWindow() {\n  restoreModality();\n}\n\nfunction onKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  if (modality !== KEYBOARD) {\n    modality = KEYBOARD;\n    activeModality = KEYBOARD;\n    callListeners();\n  }\n}\n\nfunction onVisibilityChange() {\n  if (document.visibilityState !== 'hidden') {\n    restoreModality();\n  }\n}\n\nfunction onPointerish(event) {\n  var eventType = event.type;\n\n  if (supportsPointerEvent()) {\n    if (eventType === POINTERDOWN) {\n      if (activeModality !== event.pointerType) {\n        modality = event.pointerType;\n        activeModality = event.pointerType;\n        callListeners();\n      }\n\n      return;\n    }\n\n    if (eventType === POINTERMOVE) {\n      if (modality !== event.pointerType) {\n        modality = event.pointerType;\n        callListeners();\n      }\n\n      return;\n    }\n  } // Fallback for non-PointerEvent environment\n  else {\n    if (!isEmulatingMouseEvents) {\n      if (eventType === MOUSEDOWN) {\n        if (activeModality !== MOUSE) {\n          modality = MOUSE;\n          activeModality = MOUSE;\n          callListeners();\n        }\n      }\n\n      if (eventType === MOUSEMOVE) {\n        if (modality !== MOUSE) {\n          modality = MOUSE;\n          callListeners();\n        }\n      }\n    } // Flag when browser may produce emulated events\n\n\n    if (eventType === TOUCHSTART) {\n      isEmulatingMouseEvents = true;\n\n      if (event.touches && event.touches.length > 1) {\n        isEmulatingMouseEvents = false;\n      }\n\n      if (activeModality !== TOUCH) {\n        modality = TOUCH;\n        activeModality = TOUCH;\n        callListeners();\n      }\n\n      return;\n    } // Remove flag after emulated events are finished or cancelled, and if an\n    // event occurs that cuts short a touch event sequence.\n\n\n    if (eventType === CONTEXTMENU || eventType === MOUSEUP || eventType === SELECTIONCHANGE || eventType === SCROLL || eventType === TOUCHCANCEL || eventType === TOUCHMOVE) {\n      isEmulatingMouseEvents = false;\n    }\n  }\n}\n\nif (canUseDOM) {\n  addBlurListener(window, onBlurWindow);\n  addFocusListener(window, onFocusWindow);\n  addKeyDownListener(document, onKeyDown);\n  addPointerDownListener(document, onPointerish);\n  addPointerMoveListener(document, onPointerish);\n  addVisibilityChangeListener(document, onVisibilityChange); // fallbacks\n\n  addContextMenuListener(document, onPointerish);\n  addMouseDownListener(document, onPointerish);\n  addMouseMoveListener(document, onPointerish);\n  addMouseUpListener(document, onPointerish);\n  addTouchCancelListener(document, onPointerish);\n  addTouchMoveListener(document, onPointerish);\n  addTouchStartListener(document, onPointerish);\n  addSelectiomChangeListener(document, onPointerish);\n  addScrollListener(document, onPointerish);\n}\n\nfunction callListeners() {\n  var value = {\n    activeModality,\n    modality\n  };\n  listeners.forEach(listener => {\n    listener(value);\n  });\n}\n\nexport function getActiveModality() {\n  return activeModality;\n}\nexport function getModality() {\n  return modality;\n}\nexport function addModalityListener(listener) {\n  listeners.add(listener);\n  return () => {\n    listeners.delete(listener);\n  };\n}\nexport function testOnly_resetActiveModality() {\n  isEmulatingMouseEvents = false;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}