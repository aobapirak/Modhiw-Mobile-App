{"ast":null,"code":"\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar EventSubscriptionVendor = function () {\n  function EventSubscriptionVendor() {\n    (0, _classCallCheck2.default)(this, EventSubscriptionVendor);\n    this._subscriptionsForType = {};\n  }\n  (0, _createClass2.default)(EventSubscriptionVendor, [{\n    key: \"addSubscription\",\n    value:\n\n    function addSubscription(eventType, subscription) {\n      (0, _invariant.default)(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');\n      if (!this._subscriptionsForType[eventType]) {\n        this._subscriptionsForType[eventType] = [];\n      }\n      var key = this._subscriptionsForType[eventType].length;\n      this._subscriptionsForType[eventType].push(subscription);\n      subscription.eventType = eventType;\n      subscription.key = key;\n      return subscription;\n    }\n  }, {\n    key: \"removeAllSubscriptions\",\n    value:\n\n    function removeAllSubscriptions(eventType) {\n      if (eventType == null) {\n        this._subscriptionsForType = {};\n      } else {\n        delete this._subscriptionsForType[eventType];\n      }\n    }\n  }, {\n    key: \"removeSubscription\",\n    value:\n\n    function removeSubscription(subscription) {\n      var eventType = subscription.eventType;\n      var key = subscription.key;\n      var subscriptionsForType = this._subscriptionsForType[eventType];\n      if (subscriptionsForType) {\n        delete subscriptionsForType[key];\n      }\n    }\n  }, {\n    key: \"getSubscriptionsForType\",\n    value:\n\n    function getSubscriptionsForType(eventType) {\n      return this._subscriptionsForType[eventType];\n    }\n  }]);\n  return EventSubscriptionVendor;\n}();\nvar _default = EventSubscriptionVendor;\nexports.default = _default;","map":{"version":3,"names":["EventSubscriptionVendor","_subscriptionsForType","eventType","subscription","invariant","subscriber","key","length","push","subscriptionsForType"],"sources":["C:/Users/prariya/Desktop/Modhiw/client/node_modules/react-native-web/dist/vendor/react-native/emitter/_EventSubscriptionVendor.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nimport invariant from 'fbjs/lib/invariant';\n\n/**\n * EventSubscriptionVendor stores a set of EventSubscriptions that are\n * subscribed to a particular event type.\n */\nclass EventSubscriptionVendor {\n  constructor() {\n    this._subscriptionsForType = {};\n  }\n  /**\n   * Adds a subscription keyed by an event type.\n   *\n   * @param {string} eventType\n   * @param {EventSubscription} subscription\n   */\n\n\n  addSubscription(eventType, subscription) {\n    invariant(subscription.subscriber === this, 'The subscriber of the subscription is incorrectly set.');\n\n    if (!this._subscriptionsForType[eventType]) {\n      this._subscriptionsForType[eventType] = [];\n    }\n\n    var key = this._subscriptionsForType[eventType].length;\n\n    this._subscriptionsForType[eventType].push(subscription);\n\n    subscription.eventType = eventType;\n    subscription.key = key;\n    return subscription;\n  }\n  /**\n   * Removes a bulk set of the subscriptions.\n   *\n   * @param {?string} eventType - Optional name of the event type whose\n   *   registered supscriptions to remove, if null remove all subscriptions.\n   */\n\n\n  removeAllSubscriptions(eventType) {\n    if (eventType == null) {\n      this._subscriptionsForType = {};\n    } else {\n      delete this._subscriptionsForType[eventType];\n    }\n  }\n  /**\n   * Removes a specific subscription. Instead of calling this function, call\n   * `subscription.remove()` directly.\n   *\n   * @param {object} subscription\n   */\n\n\n  removeSubscription(subscription) {\n    var eventType = subscription.eventType;\n    var key = subscription.key;\n    var subscriptionsForType = this._subscriptionsForType[eventType];\n\n    if (subscriptionsForType) {\n      delete subscriptionsForType[key];\n    }\n  }\n  /**\n   * Returns the array of subscriptions that are currently registered for the\n   * given event type.\n   *\n   * Note: This array can be potentially sparse as subscriptions are deleted\n   * from it when they are removed.\n   *\n   * TODO: This returns a nullable array. wat?\n   *\n   * @param {string} eventType\n   * @returns {?array}\n   */\n\n\n  getSubscriptionsForType(eventType) {\n    return this._subscriptionsForType[eventType];\n  }\n\n}\n\nexport default EventSubscriptionVendor;"],"mappings":";AASA,YAAY;;AAAC;AAAA;EAAA;AAAA;AAAA;AAAA;AAAA;AAEb;AAA2C,IAMrCA,uBAAuB;EAC3B,mCAAc;IAAA;IACZ,IAAI,CAACC,qBAAqB,GAAG,CAAC,CAAC;EACjC;EAAC;IAAA;IAAA;;IASD,yBAAgBC,SAAS,EAAEC,YAAY,EAAE;MACvC,IAAAC,kBAAS,EAACD,YAAY,CAACE,UAAU,KAAK,IAAI,EAAE,wDAAwD,CAAC;MAErG,IAAI,CAAC,IAAI,CAACJ,qBAAqB,CAACC,SAAS,CAAC,EAAE;QAC1C,IAAI,CAACD,qBAAqB,CAACC,SAAS,CAAC,GAAG,EAAE;MAC5C;MAEA,IAAII,GAAG,GAAG,IAAI,CAACL,qBAAqB,CAACC,SAAS,CAAC,CAACK,MAAM;MAEtD,IAAI,CAACN,qBAAqB,CAACC,SAAS,CAAC,CAACM,IAAI,CAACL,YAAY,CAAC;MAExDA,YAAY,CAACD,SAAS,GAAGA,SAAS;MAClCC,YAAY,CAACG,GAAG,GAAGA,GAAG;MACtB,OAAOH,YAAY;IACrB;EAAC;IAAA;IAAA;;IASD,gCAAuBD,SAAS,EAAE;MAChC,IAAIA,SAAS,IAAI,IAAI,EAAE;QACrB,IAAI,CAACD,qBAAqB,GAAG,CAAC,CAAC;MACjC,CAAC,MAAM;QACL,OAAO,IAAI,CAACA,qBAAqB,CAACC,SAAS,CAAC;MAC9C;IACF;EAAC;IAAA;IAAA;;IASD,4BAAmBC,YAAY,EAAE;MAC/B,IAAID,SAAS,GAAGC,YAAY,CAACD,SAAS;MACtC,IAAII,GAAG,GAAGH,YAAY,CAACG,GAAG;MAC1B,IAAIG,oBAAoB,GAAG,IAAI,CAACR,qBAAqB,CAACC,SAAS,CAAC;MAEhE,IAAIO,oBAAoB,EAAE;QACxB,OAAOA,oBAAoB,CAACH,GAAG,CAAC;MAClC;IACF;EAAC;IAAA;IAAA;;IAeD,iCAAwBJ,SAAS,EAAE;MACjC,OAAO,IAAI,CAACD,qBAAqB,CAACC,SAAS,CAAC;IAC9C;EAAC;EAAA;AAAA;AAAA,eAIYF,uBAAuB;AAAA"},"metadata":{},"sourceType":"script"}