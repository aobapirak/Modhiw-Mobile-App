{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _hyphenateStyleName = _interopRequireDefault(require(\"hyphenate-style-name\"));\nvar _mapKeyValue = _interopRequireDefault(require(\"../../modules/mapKeyValue\"));\nvar _normalizeValue = _interopRequireDefault(require(\"./normalizeValue\"));\nvar _prefixStyles = _interopRequireDefault(require(\"../../modules/prefixStyles\"));\n\nvar createDeclarationString = function createDeclarationString(prop, val) {\n  var name = (0, _hyphenateStyleName.default)(prop);\n  var value = (0, _normalizeValue.default)(prop, val);\n  if (Array.isArray(val)) {\n    return val.map(function (v) {\n      return name + ':' + v;\n    }).join(';');\n  }\n  return name + ':' + value;\n};\n\nvar createRuleBlock = function createRuleBlock(style) {\n  return (0, _mapKeyValue.default)((0, _prefixStyles.default)(style), createDeclarationString).sort().join(';');\n};\nvar _default = createRuleBlock;\nexports.default = _default;","map":{"version":3,"names":["createDeclarationString","prop","val","name","hyphenateStyleName","value","normalizeValue","Array","isArray","map","v","join","createRuleBlock","style","mapKeyValue","prefixStyles","sort"],"sources":["C:/Users/prariya/Desktop/Modhiw/client/node_modules/react-native-phone-number-input/node_modules/react-native-web/dist/exports/StyleSheet/createRuleBlock.js"],"sourcesContent":["/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport hyphenateStyleName from 'hyphenate-style-name';\nimport mapKeyValue from '../../modules/mapKeyValue';\nimport normalizeValue from './normalizeValue';\nimport prefixStyles from '../../modules/prefixStyles';\n\nvar createDeclarationString = function createDeclarationString(prop, val) {\n  var name = hyphenateStyleName(prop);\n  var value = normalizeValue(prop, val);\n  if (Array.isArray(val)) {\n    return val.map(function (v) {\n      return name + ':' + v;\n    }).join(';');\n  }\n  return name + ':' + value;\n};\n\n/**\n * Generates valid CSS rule body from a JS object\n *\n * createRuleBlock({ width: 20, color: 'blue' });\n * // => 'color:blue;width:20px'\n */\nvar createRuleBlock = function createRuleBlock(style) {\n  return mapKeyValue(prefixStyles(style), createDeclarationString).sort().join(';');\n};\n\nexport default createRuleBlock;"],"mappings":";;;;;AASA;AACA;AACA;AACA;;AAEA,IAAIA,uBAAuB,GAAG,SAASA,uBAAuB,CAACC,IAAI,EAAEC,GAAG,EAAE;EACxE,IAAIC,IAAI,GAAG,IAAAC,2BAAkB,EAACH,IAAI,CAAC;EACnC,IAAII,KAAK,GAAG,IAAAC,uBAAc,EAACL,IAAI,EAAEC,GAAG,CAAC;EACrC,IAAIK,KAAK,CAACC,OAAO,CAACN,GAAG,CAAC,EAAE;IACtB,OAAOA,GAAG,CAACO,GAAG,CAAC,UAAUC,CAAC,EAAE;MAC1B,OAAOP,IAAI,GAAG,GAAG,GAAGO,CAAC;IACvB,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EACd;EACA,OAAOR,IAAI,GAAG,GAAG,GAAGE,KAAK;AAC3B,CAAC;;AAQD,IAAIO,eAAe,GAAG,SAASA,eAAe,CAACC,KAAK,EAAE;EACpD,OAAO,IAAAC,oBAAW,EAAC,IAAAC,qBAAY,EAACF,KAAK,CAAC,EAAEb,uBAAuB,CAAC,CAACgB,IAAI,EAAE,CAACL,IAAI,CAAC,GAAG,CAAC;AACnF,CAAC;AAAC,eAEaC,eAAe;AAAA"},"metadata":{},"sourceType":"script"}