{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar clipboardAvailable = void 0;\nvar Clipboard = function () {\n  function Clipboard() {\n    _classCallCheck(this, Clipboard);\n  }\n  Clipboard.isAvailable = function isAvailable() {\n    if (clipboardAvailable === undefined) {\n      clipboardAvailable = typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\n    }\n    return clipboardAvailable;\n  };\n  Clipboard.getString = function getString() {\n    return Promise.resolve('');\n  };\n  Clipboard.setString = function setString(text) {\n    var success = false;\n    var body = document.body;\n    if (body) {\n      var node = document.createElement('span');\n      node.textContent = text;\n      node.style.opacity = '0';\n      node.style.position = 'absolute';\n      node.style.whiteSpace = 'pre-wrap';\n      body.appendChild(node);\n\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      var range = document.createRange();\n      range.selectNodeContents(node);\n      selection.addRange(range);\n\n      try {\n        document.execCommand('copy');\n        success = true;\n      } catch (e) {}\n\n      selection.removeAllRanges();\n      body.removeChild(node);\n    }\n    return success;\n  };\n  return Clipboard;\n}();\nvar _default = Clipboard;\nexports.default = _default;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","clipboardAvailable","Clipboard","isAvailable","undefined","document","queryCommandSupported","getString","Promise","resolve","setString","text","success","body","node","createElement","textContent","style","opacity","position","whiteSpace","appendChild","selection","window","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","e","removeChild"],"sources":["C:/Users/prariya/Desktop/Modhiw/client/node_modules/react-native-phone-number-input/node_modules/react-native-web/dist/exports/Clipboard/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar clipboardAvailable = void 0;\n\nvar Clipboard = function () {\n  function Clipboard() {\n    _classCallCheck(this, Clipboard);\n  }\n\n  Clipboard.isAvailable = function isAvailable() {\n    if (clipboardAvailable === undefined) {\n      clipboardAvailable = typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\n    }\n    return clipboardAvailable;\n  };\n\n  Clipboard.getString = function getString() {\n    return Promise.resolve('');\n  };\n\n  Clipboard.setString = function setString(text) {\n    var success = false;\n    var body = document.body;\n\n    if (body) {\n      // add the text to a hidden node\n      var node = document.createElement('span');\n      node.textContent = text;\n      node.style.opacity = '0';\n      node.style.position = 'absolute';\n      node.style.whiteSpace = 'pre-wrap';\n      body.appendChild(node);\n\n      // select the text\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      var range = document.createRange();\n      range.selectNodeContents(node);\n      selection.addRange(range);\n\n      // attempt to copy\n      try {\n        document.execCommand('copy');\n        success = true;\n      } catch (e) {}\n\n      // remove selection and node\n      selection.removeAllRanges();\n      body.removeChild(node);\n    }\n\n    return success;\n  };\n\n  return Clipboard;\n}();\n\nexport default Clipboard;"],"mappings":";;;;AAAA,SAASA,eAAe,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;;AAYxJ,IAAIC,kBAAkB,GAAG,KAAK,CAAC;AAE/B,IAAIC,SAAS,GAAG,YAAY;EAC1B,SAASA,SAAS,GAAG;IACnBL,eAAe,CAAC,IAAI,EAAEK,SAAS,CAAC;EAClC;EAEAA,SAAS,CAACC,WAAW,GAAG,SAASA,WAAW,GAAG;IAC7C,IAAIF,kBAAkB,KAAKG,SAAS,EAAE;MACpCH,kBAAkB,GAAG,OAAOI,QAAQ,CAACC,qBAAqB,KAAK,UAAU,IAAID,QAAQ,CAACC,qBAAqB,CAAC,MAAM,CAAC;IACrH;IACA,OAAOL,kBAAkB;EAC3B,CAAC;EAEDC,SAAS,CAACK,SAAS,GAAG,SAASA,SAAS,GAAG;IACzC,OAAOC,OAAO,CAACC,OAAO,CAAC,EAAE,CAAC;EAC5B,CAAC;EAEDP,SAAS,CAACQ,SAAS,GAAG,SAASA,SAAS,CAACC,IAAI,EAAE;IAC7C,IAAIC,OAAO,GAAG,KAAK;IACnB,IAAIC,IAAI,GAAGR,QAAQ,CAACQ,IAAI;IAExB,IAAIA,IAAI,EAAE;MAER,IAAIC,IAAI,GAAGT,QAAQ,CAACU,aAAa,CAAC,MAAM,CAAC;MACzCD,IAAI,CAACE,WAAW,GAAGL,IAAI;MACvBG,IAAI,CAACG,KAAK,CAACC,OAAO,GAAG,GAAG;MACxBJ,IAAI,CAACG,KAAK,CAACE,QAAQ,GAAG,UAAU;MAChCL,IAAI,CAACG,KAAK,CAACG,UAAU,GAAG,UAAU;MAClCP,IAAI,CAACQ,WAAW,CAACP,IAAI,CAAC;;MAGtB,IAAIQ,SAAS,GAAGC,MAAM,CAACC,YAAY,EAAE;MACrCF,SAAS,CAACG,eAAe,EAAE;MAC3B,IAAIC,KAAK,GAAGrB,QAAQ,CAACsB,WAAW,EAAE;MAClCD,KAAK,CAACE,kBAAkB,CAACd,IAAI,CAAC;MAC9BQ,SAAS,CAACO,QAAQ,CAACH,KAAK,CAAC;;MAGzB,IAAI;QACFrB,QAAQ,CAACyB,WAAW,CAAC,MAAM,CAAC;QAC5BlB,OAAO,GAAG,IAAI;MAChB,CAAC,CAAC,OAAOmB,CAAC,EAAE,CAAC;;MAGbT,SAAS,CAACG,eAAe,EAAE;MAC3BZ,IAAI,CAACmB,WAAW,CAAClB,IAAI,CAAC;IACxB;IAEA,OAAOF,OAAO;EAChB,CAAC;EAED,OAAOV,SAAS;AAClB,CAAC,EAAE;AAAC,eAEWA,SAAS;AAAA"},"metadata":{},"sourceType":"script"}