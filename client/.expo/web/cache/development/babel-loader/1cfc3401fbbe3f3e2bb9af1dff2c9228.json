{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _theming = require(\"../../core/theming\");\nvar _excluded = [\"style\", \"theme\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction AnimatedText(_ref) {\n  var style = _ref.style,\n    theme = _ref.theme,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var writingDirection = _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr';\n  return React.createElement(_reactNative.Animated.Text, _extends({}, rest, {\n    style: [styles.text, Object.assign({}, theme.fonts.regular, {\n      color: theme.colors.text,\n      writingDirection: writingDirection\n    }), style]\n  }));\n}\nvar styles = _reactNative.StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nvar _default = (0, _theming.withTheme)(AnimatedText);\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;AAeA,SAASA,YAAT,OAAwD;EAAA,IAAhCC,KAAF,GAAkCC,KAAhCD,KAAF;IAASE,KAAT,GAAkCD,KAAzBC,KAAT;IAAmBC,8CAAeF;EACtD,IAAMG,gBAAgB,GAAGC,wBAAW,CAACC,KAAZ,GAAoB,KAApB,GAA4B,KAArD;EAEA,OACEC,oBAACC,qBAAD,CAAUC,IAAV,eACMN,IADN;IAEEH,KAAK,EAAE,CACLU,MAAM,CAACC,IADF,oBAGAT,KAAK,CAACU,KAAN,CAAYC,OADjB;MAEEC,KAAK,EAAEZ,KAAK,CAACa,MAAN,CAAaJ,IAFtB;MAGEP;IAAAA,IAEFJ,KAPK;EAFT,GADF;AAcD;AAED,IAAMU,MAAM,GAAGM,uBAAU,CAACC,MAAX,CAAkB;EAC/BN,IAAI,EAAE;IACJO,SAAS,EAAE;EADP;AADyB,CAAlB,CAAf;AAAA,eAMeC,sBAAS,EAACpB,YAAD,CAAxB;AAAA","names":["AnimatedText","style","_ref","theme","rest","writingDirection","I18nManager","isRTL","React","Animated","Text","styles","text","fonts","regular","color","colors","StyleSheet","create","textAlign","withTheme"],"sources":["AnimatedText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  TextStyle,\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof Animated.Text> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nfunction AnimatedText({ style, theme, ...rest }: Props) {\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Animated.Text\n      {...rest}\n      style={[\n        styles.text,\n        {\n          ...theme.fonts.regular,\n          color: theme.colors.text,\n          writingDirection,\n        },\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default withTheme(AnimatedText);\n"]},"metadata":{},"sourceType":"script"}