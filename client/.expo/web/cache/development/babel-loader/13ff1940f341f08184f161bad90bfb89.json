{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useAnimatedValueArray;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction useAnimatedValueArray(initialValues) {\n  var refs = React.useRef([]);\n  refs.current.length = initialValues.length;\n  initialValues.forEach(function (initialValue, i) {\n    var _refs$current$i;\n    refs.current[i] = (_refs$current$i = refs.current[i]) !== null && _refs$current$i !== void 0 ? _refs$current$i : new _reactNative.Animated.Value(initialValue);\n  });\n  return refs.current;\n}","map":{"version":3,"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAEe,SAASA,qBAAT,CAA+BC,aAA/B,EAAwD;EACrE,IAAMC,IAAI,GAAGC,KAAK,CAACC,MAAN,CAA+B,EAA/B,CAAb;EAEAF,IAAI,CAACG,OAAL,CAAaC,MAAb,GAAsBL,aAAa,CAACK,MAApC;EACAL,aAAa,CAACM,OAAd,CAAsB,UAACC,YAAD,EAAeC,CAAf,EAAqB;IAAA;IACzCP,IAAI,CAACG,OAAL,CAAaI,CAAb,uBAAkBP,IAAI,CAACG,OAAL,CAAaI,CAAb,CAAlB,6DAAqC,IAAIC,qBAAQ,CAACC,KAAb,CAAmBH,YAAnB,CAArC;EACD,CAFD;EAIA,OAAON,IAAI,CAACG,OAAZ;AACD","names":["useAnimatedValueArray","initialValues","refs","React","useRef","current","length","forEach","initialValue","i","Animated","Value"],"sources":["useAnimatedValueArray.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated } from 'react-native';\n\nexport default function useAnimatedValueArray(initialValues: number[]) {\n  const refs = React.useRef<Animated.Value[]>([]);\n\n  refs.current.length = initialValues.length;\n  initialValues.forEach((initialValue, i) => {\n    refs.current[i] = refs.current[i] ?? new Animated.Value(initialValue);\n  });\n\n  return refs.current;\n}\n"]},"metadata":{},"sourceType":"script"}