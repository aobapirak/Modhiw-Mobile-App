{"ast":null,"code":"\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useWindowDimensions;\nvar _Dimensions = _interopRequireDefault(require(\"../Dimensions\"));\nvar _react = require(\"react\");\nfunction useWindowDimensions() {\n  var _useState = (0, _react.useState)(function () {\n      return _Dimensions.default.get('window');\n    }),\n    dims = _useState[0],\n    setDims = _useState[1];\n  (0, _react.useEffect)(function () {\n    function handleChange(_ref) {\n      var window = _ref.window;\n      if (window != null) {\n        setDims(window);\n      }\n    }\n    _Dimensions.default.addEventListener('change', handleChange);\n\n    setDims(_Dimensions.default.get('window'));\n    return function () {\n      _Dimensions.default.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}","map":{"version":3,"names":["useWindowDimensions","_useState","useState","Dimensions","get","dims","setDims","useEffect","handleChange","_ref","window","addEventListener","removeEventListener"],"sources":["C:/Users/prariya/Desktop/Modhiw/client/node_modules/react-native-web/dist/exports/useWindowDimensions/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\nimport Dimensions from '../Dimensions';\nimport { useEffect, useState } from 'react';\nexport default function useWindowDimensions() {\n  var _useState = useState(() => Dimensions.get('window')),\n      dims = _useState[0],\n      setDims = _useState[1];\n\n  useEffect(() => {\n    function handleChange(_ref) {\n      var window = _ref.window;\n\n      if (window != null) {\n        setDims(window);\n      }\n    }\n\n    Dimensions.addEventListener('change', handleChange); // We might have missed an update between calling `get` in render and\n    // `addEventListener` in this handler, so we set it here. If there was\n    // no change, React will filter out this update as a no-op.\n\n    setDims(Dimensions.get('window'));\n    return () => {\n      Dimensions.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}"],"mappings":";AASA,YAAY;;AAAC;AAAA;EAAA;AAAA;AAAA;AAEb;AACA;AACe,SAASA,mBAAmB,GAAG;EAC5C,IAAIC,SAAS,GAAG,IAAAC,eAAQ,EAAC;MAAA,OAAMC,mBAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;IAAA,EAAC;IACpDC,IAAI,GAAGJ,SAAS,CAAC,CAAC,CAAC;IACnBK,OAAO,GAAGL,SAAS,CAAC,CAAC,CAAC;EAE1B,IAAAM,gBAAS,EAAC,YAAM;IACd,SAASC,YAAY,CAACC,IAAI,EAAE;MAC1B,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAM;MAExB,IAAIA,MAAM,IAAI,IAAI,EAAE;QAClBJ,OAAO,CAACI,MAAM,CAAC;MACjB;IACF;IAEAP,mBAAU,CAACQ,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;;IAInDF,OAAO,CAACH,mBAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACjC,OAAO,YAAM;MACXD,mBAAU,CAACS,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,OAAOH,IAAI;AACb"},"metadata":{},"sourceType":"script"}