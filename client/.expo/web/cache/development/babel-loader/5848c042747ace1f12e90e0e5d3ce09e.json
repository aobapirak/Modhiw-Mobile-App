{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar accessibilityComponentTypeToRole = {\n  button: 'button',\n  none: 'presentation'\n};\nvar accessibilityTraitsToRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region'\n};\n\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityComponentType = _ref.accessibilityComponentType,\n    accessibilityRole = _ref.accessibilityRole,\n    accessibilityTraits = _ref.accessibilityTraits;\n  if (accessibilityRole) {\n    return accessibilityRole;\n  }\n  if (accessibilityTraits) {\n    var trait = Array.isArray(accessibilityTraits) ? accessibilityTraits[0] : accessibilityTraits;\n    return accessibilityTraitsToRole[trait];\n  }\n  if (accessibilityComponentType) {\n    return accessibilityComponentTypeToRole[accessibilityComponentType];\n  }\n};\nvar _default = propsToAriaRole;\nexports.default = _default;","map":{"version":3,"names":["accessibilityComponentTypeToRole","button","none","accessibilityTraitsToRole","adjustable","header","image","link","search","summary","propsToAriaRole","_ref","accessibilityComponentType","accessibilityRole","accessibilityTraits","trait","Array","isArray"],"sources":["C:/Users/prariya/Desktop/Modhiw/client/node_modules/react-native-phone-number-input/node_modules/react-native-web/dist/modules/AccessibilityUtil/propsToAriaRole.js"],"sourcesContent":["/**\n * Copyright (c) 2017-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar accessibilityComponentTypeToRole = {\n  button: 'button',\n  none: 'presentation'\n};\n\nvar accessibilityTraitsToRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region'\n};\n\n/**\n * Provides compatibility with React Native's \"accessibilityTraits\" (iOS) and\n * \"accessibilityComponentType\" (Android), converting them to equivalent ARIA\n * roles.\n */\nvar propsToAriaRole = function propsToAriaRole(_ref) {\n  var accessibilityComponentType = _ref.accessibilityComponentType,\n      accessibilityRole = _ref.accessibilityRole,\n      accessibilityTraits = _ref.accessibilityTraits;\n\n  if (accessibilityRole) {\n    return accessibilityRole;\n  }\n  if (accessibilityTraits) {\n    var trait = Array.isArray(accessibilityTraits) ? accessibilityTraits[0] : accessibilityTraits;\n    return accessibilityTraitsToRole[trait];\n  }\n  if (accessibilityComponentType) {\n    return accessibilityComponentTypeToRole[accessibilityComponentType];\n  }\n};\n\nexport default propsToAriaRole;"],"mappings":";;;;;AASA,IAAIA,gCAAgC,GAAG;EACrCC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE;AACR,CAAC;AAED,IAAIC,yBAAyB,GAAG;EAC9BC,UAAU,EAAE,QAAQ;EACpBH,MAAM,EAAE,QAAQ;EAChBI,MAAM,EAAE,SAAS;EACjBC,KAAK,EAAE,KAAK;EACZC,IAAI,EAAE,MAAM;EACZL,IAAI,EAAE,cAAc;EACpBM,MAAM,EAAE,QAAQ;EAChBC,OAAO,EAAE;AACX,CAAC;;AAOD,IAAIC,eAAe,GAAG,SAASA,eAAe,CAACC,IAAI,EAAE;EACnD,IAAIC,0BAA0B,GAAGD,IAAI,CAACC,0BAA0B;IAC5DC,iBAAiB,GAAGF,IAAI,CAACE,iBAAiB;IAC1CC,mBAAmB,GAAGH,IAAI,CAACG,mBAAmB;EAElD,IAAID,iBAAiB,EAAE;IACrB,OAAOA,iBAAiB;EAC1B;EACA,IAAIC,mBAAmB,EAAE;IACvB,IAAIC,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACH,mBAAmB,CAAC,GAAGA,mBAAmB,CAAC,CAAC,CAAC,GAAGA,mBAAmB;IAC7F,OAAOX,yBAAyB,CAACY,KAAK,CAAC;EACzC;EACA,IAAIH,0BAA0B,EAAE;IAC9B,OAAOZ,gCAAgC,CAACY,0BAA0B,CAAC;EACrE;AACF,CAAC;AAAC,eAEaF,eAAe;AAAA"},"metadata":{},"sourceType":"script"}