{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _Surface = _interopRequireDefault(require(\"./Surface\"));\nvar _Text = _interopRequireDefault(require(\"./Typography/Text\"));\nvar _Button = _interopRequireDefault(require(\"./Button\"));\nvar _Icon = _interopRequireDefault(require(\"./Icon\"));\nvar _theming = require(\"../core/theming\");\nvar _shadow = _interopRequireDefault(require(\"../styles/shadow\"));\nvar _excluded = [\"visible\", \"icon\", \"children\", \"actions\", \"contentStyle\", \"style\", \"theme\", \"onShowAnimationFinished\", \"onHideAnimationFinished\"],\n  _excluded2 = [\"label\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar ELEVATION = 1;\nvar DEFAULT_MAX_WIDTH = 960;\n\nvar Banner = function Banner(_ref) {\n  var visible = _ref.visible,\n    icon = _ref.icon,\n    children = _ref.children,\n    actions = _ref.actions,\n    contentStyle = _ref.contentStyle,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$onShowAnimationF = _ref.onShowAnimationFinished,\n    onShowAnimationFinished = _ref$onShowAnimationF === void 0 ? function () {} : _ref$onShowAnimationF,\n    _ref$onHideAnimationF = _ref.onHideAnimationFinished,\n    onHideAnimationFinished = _ref$onHideAnimationF === void 0 ? function () {} : _ref$onHideAnimationF,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(visible ? 1 : 0)),\n    position = _React$useRef.current;\n  var _React$useState = React.useState({\n      height: 0,\n      measured: false\n    }),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    layout = _React$useState2[0],\n    setLayout = _React$useState2[1];\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (visible) {\n      _reactNative.Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false\n      }).start(onShowAnimationFinished);\n    } else {\n      _reactNative.Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false\n      }).start(onHideAnimationFinished);\n    }\n  }, [visible, position, scale]);\n  var handleLayout = function handleLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var height = nativeEvent.layout.height;\n    setLayout({\n      height: height,\n      measured: true\n    });\n  };\n\n  var height = _reactNative.Animated.multiply(position, layout.height);\n  var translateY = _reactNative.Animated.multiply(_reactNative.Animated.add(position, -1), layout.height);\n  return React.createElement(_Surface.default, _extends({}, rest, {\n    style: [styles.container, (0, _shadow.default)(ELEVATION), style],\n    theme: theme\n  }), React.createElement(_reactNative.View, {\n    style: [styles.wrapper, contentStyle]\n  }, React.createElement(_reactNative.Animated.View, {\n    style: {\n      height: height\n    }\n  }), React.createElement(_reactNative.Animated.View, {\n    onLayout: handleLayout,\n    style: [layout.measured || !visible ?\n    [styles.absolute, {\n      transform: [{\n        translateY: translateY\n      }]\n    }] :\n    null, !layout.measured && !visible ?\n    {\n      opacity: 0\n    } : null]\n  }, React.createElement(_reactNative.View, {\n    style: styles.content\n  }, icon ? React.createElement(_reactNative.View, {\n    style: styles.icon\n  }, React.createElement(_Icon.default, {\n    source: icon,\n    size: 40\n  })) : null, React.createElement(_Text.default, {\n    style: [styles.message, {\n      color: theme.colors.text\n    }],\n    accessibilityLiveRegion: visible ? 'polite' : 'none',\n    accessibilityRole: \"alert\"\n  }, children)), React.createElement(_reactNative.View, {\n    style: styles.actions\n  }, actions.map(function (_ref3, i) {\n    var label = _ref3.label,\n      others = (0, _objectWithoutProperties2.default)(_ref3, _excluded2);\n    return React.createElement(_Button.default, _extends({\n      key:\n      i,\n      compact: true,\n      mode: \"text\",\n      style: styles.button,\n      color: theme.colors.primary\n    }, others), label);\n  })))));\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    elevation: ELEVATION\n  },\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0\n  },\n  icon: {\n    margin: 8\n  },\n  message: {\n    flex: 1,\n    margin: 8\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4\n  },\n  button: {\n    margin: 4\n  }\n});\nvar _default = (0, _theming.withTheme)(Banner);\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["ELEVATION","DEFAULT_MAX_WIDTH","Banner","_ref","visible","icon","children","actions","contentStyle","style","theme","onShowAnimationFinished","onHideAnimationFinished","rest","React","useRef","Animated","Value","position","current","useState","height","measured","layout","setLayout","scale","animation","useEffect","timing","duration","toValue","useNativeDriver","start","handleLayout","_ref2","nativeEvent","multiply","translateY","add","Surface","styles","container","shadow","View","wrapper","onLayout","absolute","transform","opacity","content","Icon","source","size","Text","message","color","colors","text","accessibilityLiveRegion","accessibilityRole","map","i","label","_ref3","others","Button","key","compact","mode","button","primary","StyleSheet","create","elevation","overflow","alignSelf","width","maxWidth","top","flexDirection","justifyContent","marginHorizontal","marginTop","marginBottom","margin","flex","withTheme"],"sources":["Banner.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp, Animated } from 'react-native';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport Button from './Button';\nimport Icon, { IconSource } from './Icon';\nimport { withTheme } from '../core/theming';\nimport type { $RemoveChildren } from '../types';\nimport shadow from '../styles/shadow';\n\nconst ELEVATION = 1;\nconst DEFAULT_MAX_WIDTH = 960;\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Whether banner is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Content that will be displayed inside banner.\n   */\n  children: string;\n  /**\n   * Icon to display for the `Banner`. Can be an image.\n   */\n  icon?: IconSource;\n  /**\n   * Action items to shown in the banner.\n   * An action item should contain the following properties:\n   *\n   * - `label`: label of the action button (required)\n   * - `onPress`: callback that is called when button is pressed (required)\n   *\n   * To customize button you can pass other props that button component takes.\n   */\n  actions: Array<\n    {\n      label: string;\n    } & Omit<React.ComponentProps<typeof Button>, 'children'>\n  >;\n  /**\n   * Style of banner's inner content.\n   * Use this prop to apply custom width for wide layouts.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * @optional\n   * Optional callback that will be called after the opening animation finished running normally\n   */\n  onShowAnimationFinished?: Animated.EndCallback;\n  /**\n   * @optional\n   * Optional callback that will be called after the closing animation finished running normally\n   */\n  onHideAnimationFinished?: Animated.EndCallback;\n};\n\ntype NativeEvent = {\n  nativeEvent: {\n    layout: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  };\n};\n\n/**\n * Banner displays a prominent message and related actions.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/banner.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Image } from 'react-native';\n * import { Banner } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(true);\n *\n *   return (\n *     <Banner\n *       visible={visible}\n *       actions={[\n *         {\n *           label: 'Fix it',\n *           onPress: () => setVisible(false),\n *         },\n *         {\n *           label: 'Learn more',\n *           onPress: () => setVisible(false),\n *         },\n *       ]}\n *       icon={({size}) => (\n *         <Image\n *           source={{\n *             uri: 'https://avatars3.githubusercontent.com/u/17571969?s=400&v=4',\n *           }}\n *           style={{\n *             width: size,\n *             height: size,\n *           }}\n *         />\n *       )}>\n *       There was a problem processing a transaction on your credit card.\n *     </Banner>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Banner = ({\n  visible,\n  icon,\n  children,\n  actions,\n  contentStyle,\n  style,\n  theme,\n  onShowAnimationFinished = () => {},\n  onHideAnimationFinished = () => {},\n  ...rest\n}: Props) => {\n  const { current: position } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const [layout, setLayout] = React.useState<{\n    height: number;\n    measured: boolean;\n  }>({\n    height: 0,\n    measured: false,\n  });\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (visible) {\n      // show\n      Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false,\n      }).start(onShowAnimationFinished);\n    } else {\n      // hide\n      Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false,\n      }).start(onHideAnimationFinished);\n    }\n  }, [visible, position, scale]);\n\n  const handleLayout = ({ nativeEvent }: NativeEvent) => {\n    const { height } = nativeEvent.layout;\n    setLayout({ height, measured: true });\n  };\n\n  // The banner animation has 2 parts:\n  // 1. Blank spacer element which animates its height to move the content\n  // 2. Actual banner which animates its translateY\n  // In initial render, we position everything normally and measure the height of the banner\n  // Once we have the height, we apply the height to the spacer and switch the banner to position: absolute\n  // We need this because we need to move the content below as if banner's height was being animated\n  // However we can't animated banner's height directly as it'll also resize the content inside\n  const height = Animated.multiply(position, layout.height);\n\n  const translateY = Animated.multiply(\n    Animated.add(position, -1),\n    layout.height\n  );\n  return (\n    <Surface\n      {...rest}\n      style={[styles.container, shadow(ELEVATION) as ViewStyle, style]}\n      theme={theme}\n    >\n      <View style={[styles.wrapper, contentStyle]}>\n        <Animated.View style={{ height }} />\n        <Animated.View\n          onLayout={handleLayout}\n          style={[\n            layout.measured || !visible\n              ? // If we have measured banner's height or it's invisible,\n                // Position it absolutely, the layout will be taken care of the spacer\n                [styles.absolute, { transform: [{ translateY }] }]\n              : // Otherwise position it normally\n                null,\n            !layout.measured && !visible\n              ? // If we haven't measured banner's height yet and it's invisible,\n                // hide it with opacity: 0 so user doesn't see it\n                { opacity: 0 }\n              : null,\n          ]}\n        >\n          <View style={styles.content}>\n            {icon ? (\n              <View style={styles.icon}>\n                <Icon source={icon} size={40} />\n              </View>\n            ) : null}\n            <Text\n              style={[styles.message, { color: theme.colors.text }]}\n              accessibilityLiveRegion={visible ? 'polite' : 'none'}\n              accessibilityRole=\"alert\"\n            >\n              {children}\n            </Text>\n          </View>\n          <View style={styles.actions}>\n            {actions.map(({ label, ...others }, i) => (\n              <Button\n                key={/* eslint-disable-line react/no-array-index-key */ i}\n                compact\n                mode=\"text\"\n                style={styles.button}\n                color={theme.colors.primary}\n                {...others}\n              >\n                {label}\n              </Button>\n            ))}\n          </View>\n        </Animated.View>\n      </View>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    elevation: ELEVATION,\n  },\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0,\n  },\n  icon: {\n    margin: 8,\n  },\n  message: {\n    flex: 1,\n    margin: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4,\n  },\n  button: {\n    margin: 4,\n  },\n});\n\nexport default withTheme(Banner);\n"]},"metadata":{},"sourceType":"script"}