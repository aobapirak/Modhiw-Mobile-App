{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _theming = require(\"../core/theming\");\nvar _excluded = [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\", \"theme\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar DURATION = 2400;\n\nvar ActivityIndicator = function ActivityIndicator(_ref) {\n  var _ref$animating = _ref.animating,\n    animating = _ref$animating === void 0 ? true : _ref$animating,\n    indicatorColor = _ref.color,\n    _ref$hidesWhenStopped = _ref.hidesWhenStopped,\n    hidesWhenStopped = _ref$hidesWhenStopped === void 0 ? true : _ref$hidesWhenStopped,\n    _ref$size = _ref.size,\n    indicatorSize = _ref$size === void 0 ? 'small' : _ref$size,\n    style = _ref.style,\n    theme = _ref.theme,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(0)),\n    timer = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new _reactNative.Animated.Value(!animating && hidesWhenStopped ? 0 : 1)),\n    fade = _React$useRef2.current;\n  var rotation = React.useRef(undefined);\n  var scale = theme.animation.scale;\n  var startRotation = React.useCallback(function () {\n    _reactNative.Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true\n    }).start();\n\n    if (rotation.current) {\n      timer.setValue(0);\n\n      _reactNative.Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n  var stopRotation = function stopRotation() {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n  React.useEffect(function () {\n    if (rotation.current === undefined) {\n      rotation.current = _reactNative.Animated.timing(timer, {\n        duration: DURATION,\n        easing: _reactNative.Easing.linear,\n        useNativeDriver: _reactNative.Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false\n      });\n    }\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      _reactNative.Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n  var color = indicatorColor || theme.colors.primary;\n  var size = typeof indicatorSize === 'string' ? indicatorSize === 'small' ? 24 : 48 : indicatorSize ? indicatorSize : 24;\n  var frames = 60 * DURATION / 1000;\n  var easing = _reactNative.Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  var containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden'\n  };\n  return React.createElement(_reactNative.View, _extends({\n    style: [styles.container, style]\n  }, rest, {\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityState: {\n      busy: animating\n    }\n  }), React.createElement(_reactNative.Animated.View, {\n    style: [{\n      width: size,\n      height: size,\n      opacity: fade\n    }],\n    collapsable: false\n  }, [0, 1].map(function (index) {\n    var inputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      return frameIndex / (frames - 1);\n    });\n    var outputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      var progress = 2 * frameIndex / (frames - 1);\n      var rotation = index ? +(360 - 15) : -(180 - 15);\n      if (progress > 1.0) {\n        progress = 2.0 - progress;\n      }\n      var direction = index ? -1 : +1;\n      return direction * (180 - 30) * easing(progress) + rotation + \"deg\";\n    });\n    var layerStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        rotate: timer.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0 + 30 + 15 + \"deg\", 2 * 360 + 30 + 15 + \"deg\"]\n        })\n      }]\n    };\n    var viewportStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        translateY: index ? -size / 2 : 0\n      }, {\n        rotate: timer.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        })\n      }]\n    };\n    var offsetStyle = index ? {\n      top: size / 2\n    } : null;\n    var lineStyle = {\n      width: size,\n      height: size,\n      borderColor: color,\n      borderWidth: size / 10,\n      borderRadius: size / 2\n    };\n    return React.createElement(_reactNative.Animated.View, {\n      key: index,\n      style: [styles.layer]\n    }, React.createElement(_reactNative.Animated.View, {\n      style: layerStyle\n    }, React.createElement(_reactNative.Animated.View, {\n      style: [containerStyle, offsetStyle],\n      collapsable: false\n    }, React.createElement(_reactNative.Animated.View, {\n      style: viewportStyle\n    }, React.createElement(_reactNative.Animated.View, {\n      style: containerStyle,\n      collapsable: false\n    }, React.createElement(_reactNative.Animated.View, {\n      style: lineStyle\n    }))))));\n  })));\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  layer: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n});\nvar _default = (0, _theming.withTheme)(ActivityIndicator);\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["DURATION","ActivityIndicator","_ref","animating","indicatorColor","color","hidesWhenStopped","size","indicatorSize","style","theme","rest","React","useRef","Animated","Value","timer","current","fade","rotation","undefined","scale","animation","startRotation","useCallback","timing","duration","toValue","isInteraction","useNativeDriver","start","setValue","loop","stopRotation","stop","useEffect","easing","Easing","linear","Platform","OS","colors","primary","frames","bezier","containerStyle","width","height","overflow","View","styles","container","accessible","accessibilityRole","accessibilityState","busy","opacity","collapsable","map","index","inputRange","Array","from","_","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","interpolate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","key","layer","StyleSheet","create","justifyContent","alignItems","absoluteFillObject","withTheme"],"sources":["ActivityIndicator.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { withTheme } from '../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ActivityIndicator = ({\n  animating = true,\n  color: indicatorColor,\n  hidesWhenStopped = true,\n  size: indicatorSize = 'small',\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(\n    new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)\n  );\n\n  const rotation = React.useRef<Animated.CompositeAnimation | undefined>(\n    undefined\n  );\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  const startRotation = React.useCallback(() => {\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (rotation.current) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  const stopRotation = () => {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(() => {\n    if (rotation.current === undefined) {\n      // Circular animation in loop\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        // Animated.loop does not work if useNativeDriver is true on web\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false,\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      // Hide indicator first and then stop rotation\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n\n  const color = indicatorColor || theme.colors.primary;\n  const size =\n    typeof indicatorSize === 'string'\n      ? indicatorSize === 'small'\n        ? 24\n        : 48\n      : indicatorSize\n      ? indicatorSize\n      : 24;\n\n  const frames = (60 * DURATION) / 1000;\n  const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  const containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden' as const,\n  };\n\n  return (\n    <View\n      style={[styles.container, style]}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: animating }}\n    >\n      <Animated.View\n        style={[{ width: size, height: size, opacity: fade }]}\n        collapsable={false}\n      >\n        {[0, 1].map((index) => {\n          // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n          const inputRange = Array.from(\n            new Array(frames),\n            (_, frameIndex) => frameIndex / (frames - 1)\n          );\n          const outputRange = Array.from(new Array(frames), (_, frameIndex) => {\n            let progress = (2 * frameIndex) / (frames - 1);\n            const rotation = index ? +(360 - 15) : -(180 - 15);\n\n            if (progress > 1.0) {\n              progress = 2.0 - progress;\n            }\n\n            const direction = index ? -1 : +1;\n\n            return `${direction * (180 - 30) * easing(progress) + rotation}deg`;\n          });\n\n          const layerStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                rotate: timer.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [`${0 + 30 + 15}deg`, `${2 * 360 + 30 + 15}deg`],\n                }),\n              },\n            ],\n          };\n\n          const viewportStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                translateY: index ? -size / 2 : 0,\n              },\n              {\n                rotate: timer.interpolate({ inputRange, outputRange }),\n              },\n            ],\n          };\n\n          const offsetStyle = index ? { top: size / 2 } : null;\n\n          const lineStyle = {\n            width: size,\n            height: size,\n            borderColor: color,\n            borderWidth: size / 10,\n            borderRadius: size / 2,\n          };\n\n          return (\n            <Animated.View key={index} style={[styles.layer]}>\n              <Animated.View style={layerStyle}>\n                <Animated.View\n                  style={[containerStyle, offsetStyle]}\n                  collapsable={false}\n                >\n                  <Animated.View style={viewportStyle}>\n                    <Animated.View style={containerStyle} collapsable={false}>\n                      <Animated.View style={lineStyle} />\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            </Animated.View>\n          );\n        })}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(ActivityIndicator);\n"]},"metadata":{},"sourceType":"script"}