{"ast":null,"code":"\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _bezier2 = _interopRequireDefault(require(\"./bezier\"));\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar _ease = void 0;\n\nvar Easing = function () {\n  function Easing() {\n    _classCallCheck(this, Easing);\n  }\n\n  Easing.step0 = function step0(n) {\n    return n > 0 ? 1 : 0;\n  };\n\n  Easing.step1 = function step1(n) {\n    return n >= 1 ? 1 : 0;\n  };\n\n  Easing.linear = function linear(t) {\n    return t;\n  };\n\n  Easing.ease = function ease(t) {\n    if (!_ease) {\n      _ease = Easing.bezier(0.42, 0, 1, 1);\n    }\n    return _ease(t);\n  };\n\n  Easing.quad = function quad(t) {\n    return t * t;\n  };\n\n  Easing.cubic = function cubic(t) {\n    return t * t * t;\n  };\n\n  Easing.poly = function poly(n) {\n    return function (t) {\n      return Math.pow(t, n);\n    };\n  };\n\n  Easing.sin = function sin(t) {\n    return 1 - Math.cos(t * Math.PI / 2);\n  };\n\n  Easing.circle = function circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  };\n\n  Easing.exp = function exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  };\n\n  Easing.elastic = function elastic() {\n    var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var p = bounciness * Math.PI;\n    return function (t) {\n      return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n    };\n  };\n\n  Easing.back = function back(s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  };\n\n  Easing.bounce = function bounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n    if (t < 2 / 2.75) {\n      t -= 1.5 / 2.75;\n      return 7.5625 * t * t + 0.75;\n    }\n    if (t < 2.5 / 2.75) {\n      t -= 2.25 / 2.75;\n      return 7.5625 * t * t + 0.9375;\n    }\n    t -= 2.625 / 2.75;\n    return 7.5625 * t * t + 0.984375;\n  };\n\n  Easing.bezier = function bezier(x1, y1, x2, y2) {\n    return (0, _bezier2.default)(x1, y1, x2, y2);\n  };\n\n  Easing.in = function _in(easing) {\n    return easing;\n  };\n\n  Easing.out = function out(easing) {\n    return function (t) {\n      return 1 - easing(1 - t);\n    };\n  };\n\n  Easing.inOut = function inOut(easing) {\n    return function (t) {\n      if (t < 0.5) {\n        return easing(t * 2) / 2;\n      }\n      return 1 - easing((1 - t) * 2) / 2;\n    };\n  };\n  return Easing;\n}();\nvar _default = Easing;\nexports.default = _default;","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_ease","Easing","step0","n","step1","linear","t","ease","bezier","quad","cubic","poly","Math","pow","sin","cos","PI","circle","sqrt","exp","elastic","bounciness","arguments","length","undefined","p","back","s","bounce","x1","y1","x2","y2","_bezier","in","_in","easing","out","inOut"],"sources":["C:/Users/prariya/Desktop/Modhiw/client/node_modules/react-native-phone-number-input/node_modules/react-native-web/dist/vendor/react-native/Animated/Easing.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport _bezier from './bezier';\n\nvar _ease = void 0;\n\n/**\n * The `Easing` module implements common easing functions. This module is used\n * by [Animate.timing()](docs/animate.html#timing) to convey physically\n * believable motion in animations.\n *\n * You can find a visualization of some common easing functions at\n * http://easings.net/\n *\n * ### Predefined animations\n *\n * The `Easing` module provides several predefined animations through the\n * following methods:\n *\n * - [`back`](docs/easing.html#back) provides a simple animation where the\n *   object goes slightly back before moving forward\n * - [`bounce`](docs/easing.html#bounce) provides a bouncing animation\n * - [`ease`](docs/easing.html#ease) provides a simple inertial animation\n * - [`elastic`](docs/easing.html#elastic) provides a simple spring interaction\n *\n * ### Standard functions\n *\n * Three standard easing functions are provided:\n *\n * - [`linear`](docs/easing.html#linear)\n * - [`quad`](docs/easing.html#quad)\n * - [`cubic`](docs/easing.html#cubic)\n *\n * The [`poly`](docs/easing.html#poly) function can be used to implement\n * quartic, quintic, and other higher power functions.\n *\n * ### Additional functions\n *\n * Additional mathematical functions are provided by the following methods:\n *\n * - [`bezier`](docs/easing.html#bezier) provides a cubic bezier curve\n * - [`circle`](docs/easing.html#circle) provides a circular function\n * - [`sin`](docs/easing.html#sin) provides a sinusoidal function\n * - [`exp`](docs/easing.html#exp) provides an exponential function\n *\n * The following helpers are used to modify other easing functions.\n *\n * - [`in`](docs/easing.html#in) runs an easing function forwards\n * - [`inOut`](docs/easing.html#inout) makes any easing function symmetrical\n * - [`out`](docs/easing.html#out) runs an easing function backwards\n */\n\nvar Easing = function () {\n  function Easing() {\n    _classCallCheck(this, Easing);\n  }\n\n  /**\n   * A stepping function, returns 1 for any positive value of `n`.\n   */\n  Easing.step0 = function step0(n) {\n    return n > 0 ? 1 : 0;\n  };\n\n  /**\n   * A stepping function, returns 1 if `n` is greater than or equal to 1.\n   */\n\n\n  Easing.step1 = function step1(n) {\n    return n >= 1 ? 1 : 0;\n  };\n\n  /**\n   * A linear function, `f(t) = t`. Position correlates to elapsed time one to\n   * one.\n   *\n   * http://cubic-bezier.com/#0,0,1,1\n   */\n\n\n  Easing.linear = function linear(t) {\n    return t;\n  };\n\n  /**\n   * A simple inertial interaction, similar to an object slowly accelerating to\n   * speed.\n   *\n   * http://cubic-bezier.com/#.42,0,1,1\n   */\n\n\n  Easing.ease = function ease(t) {\n    if (!_ease) {\n      _ease = Easing.bezier(0.42, 0, 1, 1);\n    }\n    return _ease(t);\n  };\n\n  /**\n   * A quadratic function, `f(t) = t * t`. Position equals the square of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInQuad\n   */\n\n\n  Easing.quad = function quad(t) {\n    return t * t;\n  };\n\n  /**\n   * A cubic function, `f(t) = t * t * t`. Position equals the cube of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInCubic\n   */\n\n\n  Easing.cubic = function cubic(t) {\n    return t * t * t;\n  };\n\n  /**\n   * A power function. Position is equal to the Nth power of elapsed time.\n   *\n   * n = 4: http://easings.net/#easeInQuart\n   * n = 5: http://easings.net/#easeInQuint\n   */\n\n\n  Easing.poly = function poly(n) {\n    return function (t) {\n      return Math.pow(t, n);\n    };\n  };\n\n  /**\n   * A sinusoidal function.\n   *\n   * http://easings.net/#easeInSine\n   */\n\n\n  Easing.sin = function sin(t) {\n    return 1 - Math.cos(t * Math.PI / 2);\n  };\n\n  /**\n   * A circular function.\n   *\n   * http://easings.net/#easeInCirc\n   */\n\n\n  Easing.circle = function circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  };\n\n  /**\n   * An exponential function.\n   *\n   * http://easings.net/#easeInExpo\n   */\n\n\n  Easing.exp = function exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  };\n\n  /**\n   * A simple elastic interaction, similar to a spring oscillating back and\n   * forth.\n   *\n   * Default bounciness is 1, which overshoots a little bit once. 0 bounciness\n   * doesn't overshoot at all, and bounciness of N > 1 will overshoot about N\n   * times.\n   *\n   * http://easings.net/#easeInElastic\n   */\n\n\n  Easing.elastic = function elastic() {\n    var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    var p = bounciness * Math.PI;\n    return function (t) {\n      return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n    };\n  };\n\n  /**\n   * Use with `Animated.parallel()` to create a simple effect where the object\n   * animates back slightly as the animation starts.\n   *\n   * Wolfram Plot:\n   *\n   * - http://tiny.cc/back_default (s = 1.70158, default)\n   */\n\n\n  Easing.back = function back(s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  };\n\n  /**\n   * Provides a simple bouncing effect.\n   *\n   * http://easings.net/#easeInBounce\n   */\n\n\n  Easing.bounce = function bounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      t -= 1.5 / 2.75;\n      return 7.5625 * t * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      t -= 2.25 / 2.75;\n      return 7.5625 * t * t + 0.9375;\n    }\n\n    t -= 2.625 / 2.75;\n    return 7.5625 * t * t + 0.984375;\n  };\n\n  /**\n   * Provides a cubic bezier curve, equivalent to CSS Transitions'\n   * `transition-timing-function`.\n   *\n   * A useful tool to visualize cubic bezier curves can be found at\n   * http://cubic-bezier.com/\n   */\n\n\n  Easing.bezier = function bezier(x1, y1, x2, y2) {\n    return _bezier(x1, y1, x2, y2);\n  };\n\n  /**\n   * Runs an easing function forwards.\n   */\n\n\n  Easing.in = function _in(easing) {\n    return easing;\n  };\n\n  /**\n   * Runs an easing function backwards.\n   */\n\n\n  Easing.out = function out(easing) {\n    return function (t) {\n      return 1 - easing(1 - t);\n    };\n  };\n\n  /**\n   * Makes any easing function symmetrical. The easing function will run\n   * forwards for half of the duration, then backwards for the rest of the\n   * duration.\n   */\n\n\n  Easing.inOut = function inOut(easing) {\n    return function (t) {\n      if (t < 0.5) {\n        return easing(t * 2) / 2;\n      }\n      return 1 - easing((1 - t) * 2) / 2;\n    };\n  };\n\n  return Easing;\n}();\n\nexport default Easing;"],"mappings":"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"},"metadata":{},"sourceType":"script"}