{"ast":null,"code":"\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar ImageURISourcePropType = _propTypes.default.shape({\n  uri: _propTypes.default.string,\n  bundle: _propTypes.default.string,\n  method: _propTypes.default.string,\n  headers: _propTypes.default.objectOf(_propTypes.default.string),\n  body: _propTypes.default.string,\n  cache: _propTypes.default.oneOf(['default', 'reload', 'force-cache', 'only-if-cached']),\n  width: _propTypes.default.number,\n  height: _propTypes.default.number,\n  scale: _propTypes.default.number\n});\nvar ImageSourcePropType = _propTypes.default.oneOfType([ImageURISourcePropType,\n_propTypes.default.number, _propTypes.default.string,\n_propTypes.default.arrayOf(ImageURISourcePropType)]);\nvar _default = ImageSourcePropType;\nexports.default = _default;","map":{"version":3,"names":["ImageURISourcePropType","PropTypes","shape","uri","string","bundle","method","headers","objectOf","body","cache","oneOf","width","number","height","scale","ImageSourcePropType","oneOfType","arrayOf"],"sources":["C:/Users/prariya/Desktop/Modhiw/client/node_modules/react-native-phone-number-input/node_modules/react-native-web/dist/exports/Image/ImageSourcePropType.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport PropTypes from 'prop-types';\n\nvar ImageURISourcePropType = PropTypes.shape({\n  /**\n   * `uri` is a string representing the resource identifier for the image, which\n   * could be an http address, a local file path, or the name of a static image\n   * resource (which should be wrapped in the `require('./path/to/image.png')`\n   * function).\n   */\n  uri: PropTypes.string,\n  /**\n   * `bundle` is the iOS asset bundle which the image is included in. This\n   * will default to [NSBundle mainBundle] if not set.\n   * @platform ios\n   */\n  bundle: PropTypes.string,\n  /**\n   * `method` is the HTTP Method to use. Defaults to GET if not specified.\n   */\n  method: PropTypes.string,\n  /**\n   * `headers` is an object representing the HTTP headers to send along with the\n   * request for a remote image.\n   */\n  headers: PropTypes.objectOf(PropTypes.string),\n  /**\n   * `body` is the HTTP body to send with the request. This must be a valid\n   * UTF-8 string, and will be sent exactly as specified, with no\n   * additional encoding (e.g. URL-escaping or base64) applied.\n   */\n  body: PropTypes.string,\n  /**\n   * `cache` determines how the requests handles potentially cached\n   * responses.\n   *\n   * - `default`: Use the native platforms default strategy. `useProtocolCachePolicy` on iOS.\n   *\n   * - `reload`: The data for the URL will be loaded from the originating source.\n   * No existing cache data should be used to satisfy a URL load request.\n   *\n   * - `force-cache`: The existing cached data will be used to satisfy the request,\n   * regardless of its age or expiration date. If there is no existing data in the cache\n   * corresponding the request, the data is loaded from the originating source.\n   *\n   * - `only-if-cached`: The existing cache data will be used to satisfy a request, regardless of\n   * its age or expiration date. If there is no existing data in the cache corresponding\n   * to a URL load request, no attempt is made to load the data from the originating source,\n   * and the load is considered to have failed.\n   *\n   * @platform ios\n   */\n  cache: PropTypes.oneOf(['default', 'reload', 'force-cache', 'only-if-cached']),\n  /**\n   * `width` and `height` can be specified if known at build time, in which case\n   * these will be used to set the default `<Image/>` component dimensions.\n   */\n  width: PropTypes.number,\n  height: PropTypes.number,\n  /**\n   * `scale` is used to indicate the scale factor of the image. Defaults to 1.0 if\n   * unspecified, meaning that one image pixel equates to one display point / DIP.\n   */\n  scale: PropTypes.number\n});\n\nvar ImageSourcePropType = PropTypes.oneOfType([ImageURISourcePropType,\n// Opaque type returned by require('./image.jpg')\nPropTypes.number, PropTypes.string,\n// Multiple sources\nPropTypes.arrayOf(ImageURISourcePropType)]);\n\nexport default ImageSourcePropType;"],"mappings":";AASA,YAAY;;AAAC;AAAA;EAAA;AAAA;AAAA;AAEb;AAEA,IAAIA,sBAAsB,GAAGC,kBAAS,CAACC,KAAK,CAAC;EAO3CC,GAAG,EAAEF,kBAAS,CAACG,MAAM;EAMrBC,MAAM,EAAEJ,kBAAS,CAACG,MAAM;EAIxBE,MAAM,EAAEL,kBAAS,CAACG,MAAM;EAKxBG,OAAO,EAAEN,kBAAS,CAACO,QAAQ,CAACP,kBAAS,CAACG,MAAM,CAAC;EAM7CK,IAAI,EAAER,kBAAS,CAACG,MAAM;EAqBtBM,KAAK,EAAET,kBAAS,CAACU,KAAK,CAAC,CAAC,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC;EAK9EC,KAAK,EAAEX,kBAAS,CAACY,MAAM;EACvBC,MAAM,EAAEb,kBAAS,CAACY,MAAM;EAKxBE,KAAK,EAAEd,kBAAS,CAACY;AACnB,CAAC,CAAC;AAEF,IAAIG,mBAAmB,GAAGf,kBAAS,CAACgB,SAAS,CAAC,CAACjB,sBAAsB;AAErEC,kBAAS,CAACY,MAAM,EAAEZ,kBAAS,CAACG,MAAM;AAElCH,kBAAS,CAACiB,OAAO,CAAClB,sBAAsB,CAAC,CAAC,CAAC;AAAC,eAE7BgB,mBAAmB;AAAA"},"metadata":{},"sourceType":"script"}