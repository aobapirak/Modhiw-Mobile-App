{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _theming = require(\"../../core/theming\");\nvar _excluded = [\"style\", \"theme\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar Text = function Text(_ref, ref) {\n  var style = _ref.style,\n    theme = _ref.theme,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var root = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return {\n      setNativeProps: function setNativeProps(args) {\n        var _root$current;\n        return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.setNativeProps(args);\n      }\n    };\n  });\n  return React.createElement(_reactNative.Text, _extends({}, rest, {\n    ref: root,\n    style: [Object.assign({}, theme.fonts.regular, {\n      color: theme.colors.text\n    }), styles.text, style]\n  }));\n};\nvar styles = _reactNative.StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nvar _default = (0, _theming.withTheme)(React.forwardRef(Text));\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AAiBA,IAAMA,IAA6C,GAAG,SAAhDA,IAA6C,CAAGC,MAEpDC,GAFoD,EAGjD;EAAA,IAFDC,KAAF,GAEGF,KAFDE,KAAF;IAASC,KAAT,GAEGH,KAFMG,KAAT;IAAmBC,8CAEhBJ;EACH,IAAMK,IAAI,GAAGC,KAAK,CAACC,MAAN,CAAgC,IAAhC,CAAb;EAEAD,KAAK,CAACE,mBAAN,CAA0BP,GAA1B,EAA+B;IAAA,OAAO;MACpCQ,cAAc,EAAGC,4BAAD;QAAA;QAAA,wBAAkBL,IAAI,CAACM,OAAvB,kDAAkBC,cAAcH,cAAd,CAA6BC,IAA7B,CAAlB;MAAA;IADoB,CAAP;EAAA,CAA/B;EAIA,OACEJ,oBAACO,iBAAD,eACMT,IADN;IAEEH,GAAG,EAAEI,IAFP;IAGEH,KAAK,EAAE,mBAEAC,KAAK,CAACW,KAAN,CAAYC,OADjB;MAEEC,KAAK,EAAEb,KAAK,CAACc,MAAN,CAAaC;IAAAA,IAEtBC,MAAM,CAACD,IALF,EAMLhB,KANK;EAHT,GADF;AAcD,CAxBD;AA0BA,IAAMiB,MAAM,GAAGC,uBAAU,CAACC,MAAX,CAAkB;EAC/BH,IAAI,EAAE;IACJI,SAAS,EAAE;EADP;AADyB,CAAlB,CAAf;AAAA,eAMeC,sBAAS,EAACjB,KAAK,CAACkB,UAAN,CAAiBzB,IAAjB,CAAD,CAAxB;AAAA","names":["Text","_ref","ref","style","theme","rest","root","React","useRef","useImperativeHandle","setNativeProps","args","current","_root$current","NativeText","fonts","regular","color","colors","text","styles","StyleSheet","create","textAlign","withTheme","forwardRef"],"sources":["Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Text as NativeText,\n  TextStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\nexport type Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text: React.RefForwardingComponent<{}, Props> = (\n  { style, theme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...theme.fonts.regular,\n          color: theme.colors.text,\n        },\n        styles.text,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default withTheme(React.forwardRef(Text));\n"]},"metadata":{},"sourceType":"script"}