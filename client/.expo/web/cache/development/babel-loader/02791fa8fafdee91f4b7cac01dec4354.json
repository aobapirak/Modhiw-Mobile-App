{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _color = _interopRequireDefault(require(\"color\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _Text = _interopRequireDefault(require(\"./Text\"));\nvar _theming = require(\"../../core/theming\");\nvar _excluded = [\"theme\", \"alpha\", \"family\", \"style\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar StyledText = function StyledText(_ref) {\n  var theme = _ref.theme,\n    alpha = _ref.alpha,\n    family = _ref.family,\n    style = _ref.style,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var textColor = (0, _color.default)(theme.colors.text).alpha(alpha).rgb().string();\n  var font = theme.fonts[family];\n  var writingDirection = _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr';\n  return React.createElement(_Text.default, _extends({}, rest, {\n    style: [styles.text, Object.assign({\n      color: textColor\n    }, font, {\n      writingDirection: writingDirection\n    }), style]\n  }));\n};\nvar styles = _reactNative.StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nvar _default = (0, _theming.withTheme)(StyledText);\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;AASA,IAAMA,UAAU,GAAG,SAAbA,UAAU,CAAGC,MAAqD;EAAA,IAAlDC,KAAF,GAAoDD,KAAlDC,KAAF;IAASC,KAAT,GAAoDF,KAA3CE,KAAT;IAAgBC,MAAhB,GAAoDH,KAApCG,MAAhB;IAAwBC,KAAxB,GAAoDJ,KAA5BI,KAAxB;IAAkCC,8CAAkBL;EACtE,IAAMM,SAAS,GAAGC,kBAAK,EAACN,KAAK,CAACO,MAAN,CAAaC,IAAd,CAAL,CAAyBP,KAAzB,CAA+BA,KAA/B,EAAsCQ,GAAtC,GAA4CC,MAA5C,EAAlB;EACA,IAAMC,IAAI,GAAGX,KAAK,CAACY,KAAN,CAAYV,MAAZ,CAAb;EACA,IAAMW,gBAAgB,GAAGC,wBAAW,CAACC,KAAZ,GAAoB,KAApB,GAA4B,KAArD;EAEA,OACEC,oBAACC,aAAD,eACMb,IADN;IAEED,KAAK,EAAE,CACLe,MAAM,CAACV,IADF;MAEHF,KAAK,EAAED;IAAT,GAAuBM,IAAvB;MAA6BE;IAAAA,IAC7BV,KAHK;EAFT,GADF;AAUD,CAfD;AAiBA,IAAMe,MAAM,GAAGC,uBAAU,CAACC,MAAX,CAAkB;EAC/BZ,IAAI,EAAE;IACJa,SAAS,EAAE;EADP;AADyB,CAAlB,CAAf;AAAA,eAMeC,sBAAS,EAACxB,UAAD,CAAxB;AAAA","names":["StyledText","_ref","theme","alpha","family","style","rest","textColor","color","colors","text","rgb","string","font","fonts","writingDirection","I18nManager","isRTL","React","Text","styles","StyleSheet","create","textAlign","withTheme"],"sources":["StyledText.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleProp, TextStyle, StyleSheet } from 'react-native';\n\nimport Text from './Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n  theme: ReactNativePaper.Theme;\n};\n\nconst StyledText = ({ theme, alpha, family, style, ...rest }: Props) => {\n  const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  const font = theme.fonts[family];\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        styles.text,\n        { color: textColor, ...font, writingDirection },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default withTheme(StyledText);\n"]},"metadata":{},"sourceType":"script"}